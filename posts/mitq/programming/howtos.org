---
title: How to Notes
tags: howto
date: 2014-02-07
description: DESCRIPTION
comments: true
toc: true
---


* Hakyll and github pages
  1. create git repository "my-site"  - for holding source
  2. create git repository "my-site.am" - for static generated stuff

Creating hakyll site
 1. cd to folder
 2. hakyll-init my-site
    This creates a folder my-site in the current directory, with some example
    content and a generic configuration.
 3. add "CNAME" file

#+BEGIN_SRC bash
cabal update
cabal init #create config file and edit it to set up depends package if need, and set main-is:
cabal sandbox init
cabal install
./site clean
./site watch --port=5000
#+END_SRC

**git setup**

#+BEGIN_SRC bash
git config --system  --list  #show configs from  /usr/etc/gitconfig
git config --global  --list  #show configs from  ~/.gitconfig
git config --local   --list     #show configs from .git/config
git config --list         # show
git remote -v             # show remote repository address if exist
git remote add origin https://github.comarthurvard/my-site.git #add address with alias origin
git branch -a # show branches
cd my-site
git init
git remote add origin https://github.comarthurvard/muy-site.git
git pull origin master #this step is required when repository is not empty, usually ther is READ.me file
touch .gitignore # add .gitignore file for hakyll
git add .
git commit -m "init commit"
git push -u origin master
#+END_SRC


[GitHub pages]

#+BEGIN_SRC bash
cd my-site #if needed
mkdir _publish
cd _publish
git init
git remote -v
git remote add origin https://github.com/ArthurVard/my-site.am
cp ../CNAME .
git add CNAME
git commit -m "CNAME file"
git checkout --orphan gh-pages
git push -u origin gh-pages #create branch
# add publish.sh and rebuild.sh script files to current dir
emacs publish.sh #change hakyll-site dir and git repo address
./publish.sh
#+END_SRC


*  Install Haskell on Ubuntu

*** 1. Soft Approach (from [learnhaskell](https://github.com/bitemyapp/learnhaskell))

This PPA is excellent and is what I use on all my Linux dev and build machines: http://launchpad.net/~hvr/+archive/ghc

Specifically:

#+BEGIN_SRC bash
sudo apt-get update`
#**12.04 and below** ->
sudo apt-get install python-software-properties
#**12.04 and above** ->
sudo apt-get install software-properties-common
sudo add-apt-repository -y ppa:hvr/ghc`
sudo apt-get update`
sudo apt-get install cabal-install-1.20 ghc-7.8.3 happy-1.19.4 alex-3.1.3`
#+END_SRC

Then add `~/.cabal/bin:/opt/cabal/1.20/bin:/opt/ghc/7.8.3/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin` to your `PATH` (bash_profile, zshrc, bashrc, etc)

*Optional* You could also add `.cabal-sandbox/bin` to your path. Code that you are actively developing will be available to you from the command line.
This only works when your current working directory is a cabal sandbox.


*** 2. ubuntu prerequisites

#+BEGIN_SRC bash
sudo apt-get install libgmp-dev -y  # Multiprecision arithmetic library developers tools
sudo -K  # ??

Get ghc from http://www.haskell.org/ghc/ and install
wget http://www.haskell.org/ghc/dist/7.8.3/ghc-7.8.3-i386-unknown-linux-deb7.tar.xz
tar -xvf ghc-7.8.3-i386-unknown-linux-deb7.tar.xz
cd ghc-7.8.3
./configure --prefix=/opt/ghc-7.8.3
make -j 2 install
Open ~/.bashrc file and add:
PATH=$PATH:/opt/ghc-7.8.3/bin
source ~/.bashrc # reload bash
#+END_SRC


*** 3. if you have only GHC (but not cabal) installed:

#+BEGIN_SRC bash
wget http://www.haskell.org/cabal/release/cabal-install-1.20.0.3/cabal-install-1.20.0.3.tar.gz
tar xvf cabal-install-1.20.0.3.tar.gz
cd cabal-1.20.0.3
./bootstrap.sh --user
runhaskell Setup.hs configure --user
runhaskell Setup.hs build
runhaskell Setup.hs install
cd ../cabal-install
sh bootstrap.sh
#+END_SRC

** if error
   <command line>: can't load .so/.DLL for: libgmp.so (libgmp.so: cannot open shared object file: No such file or directory)
   You either add /usr/local/lib and/or /usr/local/lib64 to $LD_LIBRARY_PATH, or add them to /etc/ld.so.conf, or (since you already have /usr/lib64/libgmp.so.3) add a missing symbolic link:

   ``` bash
   cd /usr/lib64
   sudo ln -s libgmp.so.3 libgmp.so
   ```
   (and perhaps the same for /usr/lib).

   Note that ```/usr/lib64/libgmp.so.3``` might be a different version from ```/usr/local/lib64/libgmp.so```, make sure ```ghc``` can actually be used with the former.

** if error regarding Locals see
   [Configure Locales in Ubuntu](http://www.thomas-krenn.com/en/wiki/Configure_Locales_in_Ubuntu)
   [ERROR: 'invalid byte sequence'](http://ppenzin.github.io/haskell/quickcheck/freebsd/2014/06/25/tf-random-invalid-byte-sequence/)
   see also: [Safer Haskell Install](http://yannesposito.com/Scratch/en/blog/Safer-Haskell-Install/index.html)
***  Links regarding cabal and ghc
     [http://hyperpolyglot.org/](http://hyperpolyglot.org/)
     [Install Haskell on Ubuntu from source](https://gist.github.com/Dexyne/5791465)
     [https://gist.github.com/wting/8498731](https://gist.github.com/wting/8498731)
     [http://coldwa.st/e/blog/2013-08-20-Cabal-sandbox.html](http://coldwa.st/e/blog/2013-08-20-Cabal-sandbox.html)
     [https://gist.github.com/yantonov/10083524](https://gist.github.com/yantonov/10083524)


* Installing Python Pygments on Windows
  How install [Pygments](http://pygments.org/) syntax highlighter on Windows for use with hakyll site generator
 - Download and install Python 2.7.2
 - Add C:\\Python27\\Scripts and C:\\Python27 to the Windows path
 - Download [ez_setup.py](http://peak.telecommunity.com/dist/ez_setup.py)
 - Run ```python  ez_setup.py```
 - Downlad [Pygments-1.6-py2.7.egg](https://pypi.python.org/pypi/Pygments)
** ```easy_install Pygments-1.6-py2.7.egg```
   details from [Installing Python Pygments on Windows](http://zduck.com/2009/installing-python-pygments-on-windows/)


And that's it.
