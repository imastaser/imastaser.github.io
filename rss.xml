<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Arthur Vardanyan's blog</title>
        <link>http://imast.am</link>
        <description><![CDATA[]]></description>
        <atom:link href="http://imast.am/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 02 Dec 2020 00:00:00 UT</lastBuildDate>
        <item>
    <title>Տեսակավորման ալգորիթմներ</title>
    <link>http://imast.am/mitq/programming/sorting-algorithms.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#տեսակավորման-ալգորիթմներ">Տեսակավորման ալգորիթմներ</a><ul>
<li><a href="#պղպջակային-bubble-sort">Պղպջակային (Bubble sort )</a><ul>
<li><a href="#վերլուծություն">Վերլուծություն</a></li>
<li><a href="#կայուն-է---այո">Կայուն է - այո</a></li>
<li><a href="#ադապտիվ-է---այո">Ադապտիվ է - այո</a></li>
<li><a href="#դիտողություններ">Դիտողություններ</a></li>
<li><a href="#կոդ">Կոդ</a></li>
</ul></li>
<li><a href="#տեղադրմանբ-insertion-sort">Տեղադրմանբ (Insertion sort)</a><ul>
<li><a href="#վերլուծություն-1">Վերլուծություն</a></li>
<li><a href="#կայուն-է---այո-1">Կայուն է - այո</a></li>
<li><a href="#ադապտիվ-է---այո-1">Ադապտիվ է - այո</a></li>
<li><a href="#դիտողություններ-1">Դիտողություններ</a></li>
<li><a href="#կոդը">Կոդը</a></li>
</ul></li>
<li><a href="#ընտրությամբ-selection-sort">Ընտրությամբ (Selection sort)</a><ul>
<li><a href="#վերլուծություն-2">Վերլուծություն</a></li>
<li><a href="#կայուն-է---ոչ">Կայուն է - ոչ</a></li>
<li><a href="#ադապտիվ-է---ոչ">Ադապտիվ է - ոչ</a></li>
<li><a href="#դիտողություններ-2">Դիտողություններ</a></li>
<li><a href="#կոդը-1">Կոդը</a></li>
</ul></li>
<li><a href="#արագ-quick-sort">Արագ (Quick sort)</a></li>
</ul></li>
</ul></div>
<section id="տեսակավորման-ալգորիթմներ" class="level1">
<h1>Տեսակավորման ալգորիթմներ</h1>
<p><strong>Կայունությունը (stability)</strong> - եթե տեսակավորման ալգորիթմը պահպանում է հավասար էլեմնենտների խոխադարձ տեղակայումը, ապա այսպիտի սորտավորման ալգորիթմը կանվանենք կայուն:</p>
<p><strong>Ադապտիվություն (adaptive)</strong> - կասենք տեսակավորման ալգորիթմը ադապտիվ է եթե նախօրոք սորտավորված տվյալների վրա ծախսում է մինիմում ժամանակ՝ ցուցադրում է իր լավագույն ժամանակը(Best case):</p>
<p><strong>Տվյալների կառուցվածքը</strong> եթե հատուկ չի նշվում, ալգորթմը նկարագրելիս, նշանակում է խոսքը միաչափ զանգվածի մասին է</p>
<p>// <a href="http://www.cheat-sheets.org/saved-copy/bigoposter.pdf">http://www.cheat-sheets.org/saved-copy/bigoposter.pdf</a></p>
<div class="sourceCode" id="cb1" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"></code></pre></div>
<table>
<thead>
<tr class="header">
<th>Տեսակավորման ալգորիթմներ</th>
<th>Stable</th>
<th>Adaptive</th>
<th>Best</th>
<th>Average</th>
<th>Worst</th>
<th>Type</th>
<th>Space</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Պղպջակային (Bubble sort)</td>
<td>Yes</td>
<td>Yes</td>
<td>Ω(n)</td>
<td>θ(n<sup>2</sup>)</td>
<td>O(n<sup>2</sup>)</td>
<td>Comparision sorts</td>
<td>O(1)</td>
</tr>
<tr class="even">
<td>Տեղադրմամբ (Insertion sort)</td>
<td>Yes</td>
<td>Yes</td>
<td>Ω(n)</td>
<td>θ(n<sup>2</sup>)</td>
<td>O(n<sup>2</sup>)</td>
<td></td>
<td>O(1)</td>
</tr>
<tr class="odd">
<td>Ընտրւոթյամբ (Selection sort)</td>
<td></td>
<td>No</td>
<td>Ω(n<sup>2</sup>)</td>
<td>θ(n<sup>2</sup>)</td>
<td>O(n<sup>2</sup>)</td>
<td></td>
<td>O(1)</td>
</tr>
<tr class="even">
<td>Quicksort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O(log(n))</td>
</tr>
<tr class="odd">
<td>Mergesort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O(n)</td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>Count Sort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Index sorts</td>
<td></td>
</tr>
<tr class="even">
<td>Bucket/Bin Sort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O(n)</td>
</tr>
<tr class="odd">
<td>Redix Sort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O(n+k)</td>
</tr>
<tr class="even">
<td>Shell Sort</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<section id="պղպջակային-bubble-sort" class="level2">
<h2>Պղպջակային (Bubble sort )</h2>
<p>Համեմատության եղանակով տեսակավորման ալգորիթմ է, որը կարգավորում է զանգվածը ցույգ առ ցւոյգ համեմատելով հարևան էլեմնենտերը և տեղափոխելով իրար միջև եթե սխալ են դասավորված իրար նկատմամբ: Այսպիսի մի համեմատությունների և տեղափոխությունների անցումի մեկ ցիկլը էլեմենտների վրայով կանվանենք <strong>Փաս(Pass)</strong>: Առաջին Փասի արդյունքում մեկ էլեմենտ կգտնի իր տեղը, մեծագույն էլեմենտը զանգվածում կկարգավորվի: `n` էլեմնետ ունեցող զանգվածում հարկավոր կլինի n-1 Փաս ամբողձ զանգված հերթականուլյամբ դասավորելու համար: Իսկ n էլեմենտի համար պետք է կատարել n-1 համեմատություն և մաքսիմում n-1 տեղափոխություն՝ հերթական «ծանր» էլեմենտը իր տեղ դնելու համար:</p>
<div class="sourceCode" id="cb2" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb2-1"><a href="#cb2-1"></a>  <span class="dt">int</span> A[] = {<span class="dv">9</span>,<span class="dv">6</span>,<span class="dv">8</span>,<span class="dv">4</span>,<span class="dv">3</span>}</span>
<span id="cb2-2"><a href="#cb2-2"></a></span>
<span id="cb2-3"><a href="#cb2-3"></a>| I Pass         | II Pass      | III Pass     | IV Pass      |</span>
<span id="cb2-4"><a href="#cb2-4"></a>|----------------+--------------+--------------+--------------|</span>
<span id="cb2-5"><a href="#cb2-5"></a>| <span class="dv">9</span>] <span class="dv">6</span>  <span class="dv">6</span>  <span class="dv">6</span>  <span class="dv">6</span>  | <span class="dv">6</span>] <span class="dv">6</span>  <span class="dv">6</span>  <span class="dv">6</span>   | <span class="dv">6</span>] <span class="dv">4</span>  <span class="dv">4</span>      | <span class="dv">4</span>] <span class="fl">3.</span>        |</span>
<span id="cb2-6"><a href="#cb2-6"></a>| <span class="dv">6</span>] <span class="dv">9</span>] <span class="dv">8</span>  <span class="dv">8</span>  <span class="dv">8</span>  | <span class="dv">8</span>] <span class="dv">8</span>] <span class="dv">4</span>  <span class="dv">4</span>   | <span class="dv">4</span>] <span class="dv">6</span>] <span class="dv">3</span>      | <span class="dv">3</span>] <span class="fl">4.</span>        |</span>
<span id="cb2-7"><a href="#cb2-7"></a>| <span class="dv">8</span>  <span class="dv">8</span>] <span class="dv">9</span>] <span class="dv">4</span>  <span class="dv">4</span>  | <span class="dv">4</span>  <span class="dv">4</span>] <span class="dv">8</span>] <span class="dv">3</span>   | <span class="dv">3</span>  <span class="dv">3</span>] <span class="fl">6.</span>     | <span class="fl">6.</span> <span class="fl">6.</span>        |</span>
<span id="cb2-8"><a href="#cb2-8"></a>| <span class="dv">4</span>  <span class="dv">4</span>  <span class="dv">4</span>] <span class="dv">9</span>] <span class="dv">3</span>  | <span class="dv">3</span>  <span class="dv">3</span>  <span class="dv">3</span>] <span class="fl">8.</span>  | <span class="fl">8.</span> <span class="fl">8.</span> <span class="fl">8.</span>     | <span class="fl">8.</span> <span class="fl">8.</span>        |</span>
<span id="cb2-9"><a href="#cb2-9"></a>| <span class="dv">3</span>  <span class="dv">3</span>  <span class="dv">3</span>  <span class="dv">3</span>] <span class="fl">9.</span> | <span class="fl">9.</span> <span class="fl">9.</span> <span class="fl">9.</span> <span class="fl">9.</span>  | <span class="fl">9.</span> <span class="fl">9.</span> <span class="fl">9.</span>     | <span class="fl">9.</span> <span class="fl">9.</span>        |</span>
<span id="cb2-10"><a href="#cb2-10"></a>|----------------+--------------+--------------+--------------|</span>
<span id="cb2-11"><a href="#cb2-11"></a>| sorted el.  <span class="dv">9</span>  | sorted el. <span class="dv">8</span> | sorted el. <span class="dv">6</span> | sorted el. <span class="dv">4</span> |</span>
<span id="cb2-12"><a href="#cb2-12"></a>| #Comp: <span class="dv">4</span>       | #Comp: <span class="dv">3</span>     | #Comp: <span class="dv">2</span>     | #Comp: <span class="dv">1</span>     |</span>
<span id="cb2-13"><a href="#cb2-13"></a>| #Swap: <span class="dv">4</span>       | #Swap: <span class="dv">2</span>     | #Swap: <span class="dv">2</span>     | #Swap: <span class="dv">1</span>     |</span>
<span id="cb2-14"><a href="#cb2-14"></a>| #max swap: <span class="dv">4</span>   | #max swap: <span class="dv">3</span> | #max swap: <span class="dv">2</span> | #max swap: <span class="dv">1</span> | </span></code></pre></div>
<section id="վերլուծություն" class="level3">
<h3>Վերլուծություն</h3>
<div class="sourceCode" id="cb3" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb3-1"><a href="#cb3-1"></a>Դիցուք ունենք n տարրանի զանգված, ապա.</span>
<span id="cb3-2"><a href="#cb3-2"></a>- Փասերի քանակը՝ (n-<span class="dv">1</span>)</span>
<span id="cb3-3"><a href="#cb3-3"></a>- Համեմատությունների քանակը՝ <span class="dv">1</span>+<span class="dv">2</span>+...+n-<span class="dv">1</span> = n*(n-<span class="dv">1</span>)/<span class="dv">2</span> ~ O(n^<span class="dv">2</span>)</span>
<span id="cb3-4"><a href="#cb3-4"></a>- Մաքսիմալ հնարավոր տեղափոխությունների քանակը՝ <span class="dv">1</span>+<span class="dv">2</span>+...+n-<span class="dv">1</span> = n*(n-<span class="dv">1</span>)/<span class="dv">2</span> ~ O(n^<span class="dv">2</span>)</span>
<span id="cb3-5"><a href="#cb3-5"></a></span></code></pre></div>
</section>
<section id="կայուն-է---այո" class="level3">
<h3>Կայուն է - այո</h3>
<div class="sourceCode" id="cb4" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb4-1"><a href="#cb4-1"></a>|--------------------|</span>
<span id="cb4-2"><a href="#cb4-2"></a>| <span class="dv">9</span> ] <span class="dv">9</span>   <span class="dv">9</span>   <span class="dv">9</span>   <span class="dv">9</span>  | No change of order, =&gt; Bubbke sort is stable</span>
<span id="cb4-3"><a href="#cb4-3"></a>| <span class="dv">9</span>*] <span class="dv">9</span>*] <span class="dv">3</span>   <span class="dv">3</span>   <span class="dv">3</span>  |</span>
<span id="cb4-4"><a href="#cb4-4"></a>| <span class="dv">3</span>   <span class="dv">3</span> ] <span class="dv">9</span>*] <span class="dv">5</span>   <span class="dv">5</span>  |</span>
<span id="cb4-5"><a href="#cb4-5"></a>| <span class="dv">5</span>   <span class="dv">5</span>   <span class="dv">5</span> ] <span class="dv">9</span>*] <span class="dv">4</span>  |</span>
<span id="cb4-6"><a href="#cb4-6"></a>| <span class="dv">4</span>   <span class="dv">4</span>   <span class="dv">4</span>   <span class="dv">4</span> ] <span class="dv">9</span>* |</span>
<span id="cb4-7"><a href="#cb4-7"></a>|--------------------|</span></code></pre></div>
</section>
<section id="ադապտիվ-է---այո" class="level3">
<h3>Ադապտիվ է - այո</h3>
<p>Պղպջակային ալգորիթմը իր բնույթով <strong>ադապտիվ</strong> չէ, բայց այն հնարավոր է դարձնել ադապտիվ, կոդի մեջ այդ նպատակի համար օգտագործում ենք flag փոփոխականը որողելու համար հերթական փասի ընթացքում գոնե մեկ տեղափոխություն(swap) եղել է, եթե չի եղել նշանակում է տվյալնեն արդեն կարգավրոված են:</p>
<div class="sourceCode" id="cb5" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb5-1"><a href="#cb5-1"></a>| sorted list   |</span>
<span id="cb5-2"><a href="#cb5-2"></a>|---------------|</span>
<span id="cb5-3"><a href="#cb5-3"></a>| <span class="dv">3</span>] <span class="dv">3</span>  <span class="dv">3</span>  <span class="dv">3</span>  <span class="dv">3</span> | No swaping, mean list already sorted, we use </span>
<span id="cb5-4"><a href="#cb5-4"></a>| <span class="dv">4</span>] <span class="dv">4</span>] <span class="dv">4</span>  <span class="dv">4</span>  <span class="dv">4</span> | flag to determine <span class="cf">if</span> ther is swap and made </span>
<span id="cb5-5"><a href="#cb5-5"></a>| <span class="dv">6</span>  <span class="dv">6</span>] <span class="dv">6</span>] <span class="dv">6</span>  <span class="dv">6</span> | buuble sort algorithm adaptive, it is not </span>
<span id="cb5-6"><a href="#cb5-6"></a>| <span class="dv">8</span>  <span class="dv">8</span>  <span class="dv">8</span>] <span class="dv">8</span>] <span class="dv">8</span> | adaptive by iteself, but it is possible to </span>
<span id="cb5-7"><a href="#cb5-7"></a>| <span class="dv">9</span>  <span class="dv">9</span>  <span class="dv">9</span>  <span class="dv">9</span>] <span class="dv">9</span> | make it adaptive.</span>
<span id="cb5-8"><a href="#cb5-8"></a>|---------------|</span>
<span id="cb5-9"><a href="#cb5-9"></a>| #Comp: <span class="dv">4</span>      |</span>
<span id="cb5-10"><a href="#cb5-10"></a>| #Swap: <span class="dv">0</span>      | =&gt; O(n) - <span class="cf">if</span> already sorted, minimum time </span>
<span id="cb5-11"><a href="#cb5-11"></a>| #max swap: <span class="dv">4</span>  |</span></code></pre></div>
</section>
<section id="դիտողություններ" class="level3">
<h3>Դիտողություններ</h3>
<ul>
<li>Այս տեսակավորման միջանկյալ արդյունքները՝ k Փաս-ից հետո, k &lt; n-1, նույնպես կարող են օգտակար լինեն, քանի որ ամեն Փասի ընթացքում «ամենածանր» տարրը իջնում է ներքև, հետևաբար 1-ին փասից հետո կունենաք մեծագույն տարրը, 2-րդից հետո երկու մեծագույն տարրերը և այդպես շարունակ:</li>
</ul>
</section>
<section id="կոդ" class="level3">
<h3>Կոդ</h3>
<div class="sourceCode" id="cb6" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb6-1"><a href="#cb6-1"></a><span class="dt">void</span> BubbleSort(<span class="dt">int</span> A[], <span class="dt">int</span> n)</span>
<span id="cb6-2"><a href="#cb6-2"></a>{</span>
<span id="cb6-3"><a href="#cb6-3"></a> <span class="co">// no swapping means the list already sorted</span></span>
<span id="cb6-4"><a href="#cb6-4"></a> <span class="co">// we use flag to determine if there is a swap. </span></span>
<span id="cb6-5"><a href="#cb6-5"></a> <span class="dt">int</span> flag = <span class="dv">0</span>;</span>
<span id="cb6-6"><a href="#cb6-6"></a> <span class="cf">for</span>(i = <span class="dv">0</span>; i &lt; n-<span class="dv">1</span>; i++) <span class="co">// passes</span></span>
<span id="cb6-7"><a href="#cb6-7"></a> {</span>
<span id="cb6-8"><a href="#cb6-8"></a>   <span class="cf">for</span>(j = <span class="dv">0</span>, flag = <span class="dv">0</span>; i &lt; n-<span class="dv">1</span>-i; j++) <span class="co">// every pass reduced comparision count </span></span>
<span id="cb6-9"><a href="#cb6-9"></a>   {</span>
<span id="cb6-10"><a href="#cb6-10"></a>     <span class="cf">if</span>(A[j] &gt; A[j+<span class="dv">1</span>])</span>
<span id="cb6-11"><a href="#cb6-11"></a>     {</span>
<span id="cb6-12"><a href="#cb6-12"></a>       swap(A[j], A[j+<span class="dv">1</span>]);</span>
<span id="cb6-13"><a href="#cb6-13"></a>       flag = <span class="dv">1</span>;  </span>
<span id="cb6-14"><a href="#cb6-14"></a>     }</span>
<span id="cb6-15"><a href="#cb6-15"></a>   }</span>
<span id="cb6-16"><a href="#cb6-16"></a>   <span class="cf">if</span>(flag == <span class="dv">0</span>) <span class="cf">break</span>;  </span>
<span id="cb6-17"><a href="#cb6-17"></a> }</span>
<span id="cb6-18"><a href="#cb6-18"></a>}</span></code></pre></div>
</section>
</section>
<section id="տեղադրմանբ-insertion-sort" class="level2">
<h2>Տեղադրմանբ (Insertion sort)</h2>
<ul>
<li>Նախ հասկանանք ի՞նչ նկատո ունենք <strong>տեղադրում</strong> ասելով</li>
</ul>
<div class="sourceCode" id="cb7" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb7-1"><a href="#cb7-1"></a><span class="dt">int</span> A[] = {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>, * ,<span class="dv">15</span>,<span class="dv">20</span>,<span class="dv">25</span>,<span class="dv">30</span>}</span>
<span id="cb7-2"><a href="#cb7-2"></a><span class="dt">int</span> new_element = <span class="dv">12</span></span></code></pre></div>
<p>Դիգուք ունենք հերաթականությմաբ դասավորված զանգվածը որի մեջ ուոզում ենք դեծադրել նոր էլեմենտ 12 իր իր տեղում որ չխաղտի դասավորվածությունը: Դրա համար պետք է անել երկու բան</p>
<ol>
<li>գտնել 12 տեղը զանգվածում</li>
<li>և տեղափոխել այդ տեղից սկսած բոլոր տարրերը դեպի աջ, ազատելով 12 տեղը</li>
</ol>
<p>Ավելի օպտիմալ կլինի եթե շրջանցենք առաջին քայլը՝ սկսենլով ուղղակի տեծափոխել զանգվածի վերջին էլեմենտը դեպի աջ և միաժամանակ փնտրելով նոր տեծադրվոծ էլեմենտի տեղը.</p>
<div class="sourceCode" id="cb8" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb8-1"><a href="#cb8-1"></a><span class="dt">int</span> A[] = {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,<span class="dv">15</span>,<span class="dv">20</span>,<span class="dv">25</span>,<span class="dv">30</span>,*}</span>
<span id="cb8-2"><a href="#cb8-2"></a><span class="dt">int</span> new_element = <span class="dv">12</span></span>
<span id="cb8-3"><a href="#cb8-3"></a></span>
<span id="cb8-4"><a href="#cb8-4"></a>- <span class="dv">30</span> &gt; <span class="dv">12</span> Yes, shift it - {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,<span class="dv">15</span>,<span class="dv">20</span>,<span class="dv">25</span>,*,<span class="dv">30</span>}</span>
<span id="cb8-5"><a href="#cb8-5"></a>- <span class="dv">25</span> &gt; <span class="dv">12</span> Yes, shift it - {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,<span class="dv">15</span>,<span class="dv">20</span>,*,<span class="dv">25</span>,<span class="dv">30</span>}</span>
<span id="cb8-6"><a href="#cb8-6"></a>- <span class="dv">20</span> &gt; <span class="dv">12</span> Yes, shift it - {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,<span class="dv">15</span>,*,<span class="dv">20</span>,<span class="dv">25</span>,<span class="dv">30</span>}</span>
<span id="cb8-7"><a href="#cb8-7"></a>- <span class="dv">15</span> &gt; <span class="dv">12</span> Yes, shift it - {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,*,<span class="dv">15</span>,<span class="dv">20</span>,<span class="dv">25</span>,<span class="dv">30</span>}</span>
<span id="cb8-8"><a href="#cb8-8"></a>- <span class="dv">10</span> &gt; <span class="dv">12</span> No,  insert   - {<span class="dv">2</span>,<span class="dv">6</span>,<span class="dv">10</span>,<span class="dv">12</span>,<span class="dv">15</span>,<span class="dv">20</span>,<span class="dv">25</span>,<span class="dv">30</span>}</span>
<span id="cb8-9"><a href="#cb8-9"></a></span>
<span id="cb8-10"><a href="#cb8-10"></a><span class="co">// in case Linked list</span></span>
<span id="cb8-11"><a href="#cb8-11"></a>Node&lt;<span class="dt">int</span>&gt; first = <span class="dv">2</span> --&gt; <span class="dv">6</span> --&gt; <span class="dv">10</span> --&gt; <span class="dv">15</span> --&gt; <span class="dv">20</span> --&gt; <span class="dv">25</span> --&gt; <span class="dv">30</span></span>
<span id="cb8-12"><a href="#cb8-12"></a>p = first;</span>
<span id="cb8-13"><a href="#cb8-13"></a>q = NULL; <span class="co">//tail pointer</span></span>
<span id="cb8-14"><a href="#cb8-14"></a>x = <span class="dv">18</span>;</span>
<span id="cb8-15"><a href="#cb8-15"></a><span class="co">// we do not need shifting in linked list, we just need to trabel and fine out the right position of new element</span></span>
<span id="cb8-16"><a href="#cb8-16"></a></span>
<span id="cb8-17"><a href="#cb8-17"></a>procedure:</span>
<span id="cb8-18"><a href="#cb8-18"></a>- p.data &lt; x, yes q = p; p = p.next;</span>
<span id="cb8-19"><a href="#cb8-19"></a>- p.data &lt; x, yes q = p; p = p.next;</span>
<span id="cb8-20"><a href="#cb8-20"></a>.......</span>
<span id="cb8-21"><a href="#cb8-21"></a>- p.data &lt; x, no, t = new Node(x);, t.next = p; q.next = t;</span>
<span id="cb8-22"><a href="#cb8-22"></a></span>
<span id="cb8-23"><a href="#cb8-23"></a>Min number of Comparisions: <span class="dv">0</span>   ~ O(<span class="dv">1</span>)</span>
<span id="cb8-24"><a href="#cb8-24"></a>Max number of Comparisions: n-<span class="dv">1</span> ~ O(n)</span>
<span id="cb8-25"><a href="#cb8-25"></a></span>
<span id="cb8-26"><a href="#cb8-26"></a>Number of Swaps:        <span class="dv">0</span> , not required    </span>
<span id="cb8-27"><a href="#cb8-27"></a></span></code></pre></div>
<p><strong>Ալգորիթմը</strong></p>
<p>Դիցուք ունենք 5 տարրանի A զանգվածը, պետք է տեսակավորենք: Ենթադրում ենք որ առաջին տարր իր տեղում է, իսկ մնացած 4 տարրերը պետք է դասավորենք <strong>տեղադրով</strong> մեկ առ մեկ՝ վերը նկարագրված եղանակով. առաջին մի տարրանի սորտավորված զանգվածի մեջ.</p>
<div class="sourceCode" id="cb9" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb9-1"><a href="#cb9-1"></a><span class="dt">int</span> A[] = {<span class="dv">9</span>,<span class="dv">6</span>,<span class="dv">8</span>,<span class="dv">4</span>,<span class="dv">3</span>}</span>
<span id="cb9-2"><a href="#cb9-2"></a></span>
<span id="cb9-3"><a href="#cb9-3"></a>| I Pass            | II Pass           | III Pass           | IV Pass           |</span>
<span id="cb9-4"><a href="#cb9-4"></a>|-------------------+-------------------+--------------------+-------------------|</span>
<span id="cb9-5"><a href="#cb9-5"></a>| <span class="dv">9</span> * <span class="dv">8</span> <span class="dv">4</span> <span class="dv">3</span>         | <span class="dv">6</span> <span class="dv">9</span> * <span class="dv">4</span> <span class="dv">3</span>         | <span class="dv">6</span> <span class="dv">8</span> <span class="dv">9</span> * <span class="dv">3</span>          | <span class="dv">4</span> <span class="dv">6</span> <span class="dv">8</span> <span class="dv">9</span> *         |</span>
<span id="cb9-6"><a href="#cb9-6"></a>| <span class="dv">6</span>                 | . <span class="dv">8</span>               | . . <span class="dv">4</span>              | . . . <span class="dv">3</span>           |</span>
<span id="cb9-7"><a href="#cb9-7"></a>| <span class="dv">9</span> &gt; <span class="dv">6</span>, yes, shift | <span class="dv">9</span> &gt; <span class="dv">8</span>, yes, shift | <span class="dv">9</span> &gt; <span class="dv">4</span>, yes, shift  | <span class="dv">9</span> &gt; <span class="dv">4</span>, yes, shift |</span>
<span id="cb9-8"><a href="#cb9-8"></a>| <span class="dv">6</span> <span class="dv">9</span> <span class="dv">8</span> <span class="dv">4</span> <span class="dv">3</span>         | <span class="dv">6</span> * <span class="dv">9</span> <span class="dv">4</span> <span class="dv">3</span>         | <span class="dv">6</span> <span class="dv">8</span> * <span class="dv">9</span> <span class="dv">3</span>          | <span class="dv">4</span> <span class="dv">5</span> <span class="dv">8</span> * <span class="dv">9</span>         |</span>
<span id="cb9-9"><a href="#cb9-9"></a>|                   | <span class="dv">8</span>                 | . <span class="dv">4</span>                | . . <span class="dv">3</span>             |</span>
<span id="cb9-10"><a href="#cb9-10"></a>|                   | <span class="dv">6</span> &gt; <span class="dv">8</span>, no, insert | <span class="dv">8</span> &gt; <span class="dv">4</span>, yes, shift  | <span class="dv">8</span> &gt; <span class="dv">3</span>, yes, shift |</span>
<span id="cb9-11"><a href="#cb9-11"></a>|                   | <span class="dv">6</span> <span class="dv">8</span> <span class="dv">9</span> <span class="dv">4</span> <span class="dv">3</span>         | <span class="dv">6</span> * <span class="dv">8</span> <span class="dv">9</span> <span class="dv">3</span>          | <span class="dv">4</span> <span class="dv">5</span> * <span class="dv">8</span> <span class="dv">9</span>         |</span>
<span id="cb9-12"><a href="#cb9-12"></a>|                   |                   | <span class="dv">6</span> &gt; <span class="dv">4</span>, yes, shift  | . <span class="dv">3</span>               |</span>
<span id="cb9-13"><a href="#cb9-13"></a>|                   |                   | * <span class="dv">6</span> <span class="dv">8</span> <span class="dv">9</span> <span class="dv">3</span>          | <span class="dv">5</span> &gt; <span class="dv">3</span>, yes, shift |</span>
<span id="cb9-14"><a href="#cb9-14"></a>|                   |                   | <span class="dv">4</span>                  | <span class="dv">4</span> * <span class="dv">5</span> <span class="dv">8</span> <span class="dv">9</span>         |</span>
<span id="cb9-15"><a href="#cb9-15"></a>|                   |                   | no element, insert | <span class="dv">3</span>                 |</span>
<span id="cb9-16"><a href="#cb9-16"></a>|                   |                   | <span class="dv">4</span> <span class="dv">6</span> <span class="dv">8</span> <span class="dv">9</span> <span class="dv">3</span>          | <span class="dv">4</span> &gt; <span class="dv">3</span>, yes, shift |</span>
<span id="cb9-17"><a href="#cb9-17"></a>|                   |                   |                    | * <span class="dv">4</span> <span class="dv">5</span> <span class="dv">8</span> <span class="dv">9</span>         |</span>
<span id="cb9-18"><a href="#cb9-18"></a>|                   |                   |                    | <span class="dv">3</span>, insert         |</span>
<span id="cb9-19"><a href="#cb9-19"></a>|                   |                   |                    | <span class="dv">3</span> <span class="dv">4</span> <span class="dv">5</span> <span class="dv">8</span> <span class="dv">9</span>         |</span>
<span id="cb9-20"><a href="#cb9-20"></a>|-------------------+-------------------+--------------------+-------------------|</span>
<span id="cb9-21"><a href="#cb9-21"></a>| sorted el.  <span class="dv">6</span>     | sorted el. <span class="dv">8</span>      | sorted el. <span class="dv">4</span>       | sorted el. <span class="dv">3</span>      |</span>
<span id="cb9-22"><a href="#cb9-22"></a>| #Comp: <span class="dv">1</span>          | #Comp: <span class="dv">2</span>          | #Comp: <span class="dv">3</span>           | #Comp: <span class="dv">4</span>          |</span>
<span id="cb9-23"><a href="#cb9-23"></a>| #Swap: <span class="dv">1</span>          | #Swap: <span class="dv">1</span>          | #Swap: <span class="dv">3</span>           | #Swap: <span class="dv">4</span>          |</span>
<span id="cb9-24"><a href="#cb9-24"></a>| #max swap: <span class="dv">1</span>      | #max swap: <span class="dv">2</span>      | #max swap: <span class="dv">3</span>       | #max swap: <span class="dv">4</span>      |</span>
<span id="cb9-25"><a href="#cb9-25"></a></span></code></pre></div>
<section id="վերլուծություն-1" class="level3">
<h3>Վերլուծություն</h3>
<div class="sourceCode" id="cb10" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb10-1"><a href="#cb10-1"></a>Դիցուք ունենք n տարրանի զանգված, ապա.</span>
<span id="cb10-2"><a href="#cb10-2"></a>- Փասերի քանակը՝ (n-<span class="dv">1</span>)</span>
<span id="cb10-3"><a href="#cb10-3"></a>- Համեմատությունների քանակը՝ <span class="dv">1</span>+<span class="dv">2</span>+...+n-<span class="dv">1</span> = n*(n-<span class="dv">1</span>)/<span class="dv">2</span> ~ O(n^<span class="dv">2</span>)</span>
<span id="cb10-4"><a href="#cb10-4"></a>- Մաքսիմալ հնարավոր տեղափոխությունների քանակը՝ <span class="dv">1</span>+<span class="dv">2</span>+...+n-<span class="dv">1</span> = n*(n-<span class="dv">1</span>)/<span class="dv">2</span> ~ O(n^<span class="dv">2</span>)</span>
<span id="cb10-5"><a href="#cb10-5"></a></span>
<span id="cb10-6"><a href="#cb10-6"></a>|      | min - Best <span class="cf">case</span>    | max: Worst <span class="cf">case</span>     |</span>
<span id="cb10-7"><a href="#cb10-7"></a>|------+--------------------+---------------------|</span>
<span id="cb10-8"><a href="#cb10-8"></a>| Time | O(n)               | O(n^<span class="dv">2</span>)              |</span>
<span id="cb10-9"><a href="#cb10-9"></a>| Swap | O(<span class="dv">1</span>)               | O(n^<span class="dv">2</span>)              |</span>
<span id="cb10-10"><a href="#cb10-10"></a>|------+--------------------+---------------------|</span>
<span id="cb10-11"><a href="#cb10-11"></a>|      | in ascending order | in descending order |</span>
<span id="cb10-12"><a href="#cb10-12"></a></span></code></pre></div>
</section>
<section id="կայուն-է---այո-1" class="level3">
<h3>Կայուն է - այո</h3>
<p>Դիտարկենք զանգված որը տեսակավորել ենք տեադրմամբ, և ունենք կնկնվող էլեմենտ 6’ որի հերթն է տեծադրելու զանգվածի կարգավորված մասում, քանի որ մենք ստուգում ենք աջից խիստ անհավասարություն, այսինք հավասար էլեմենտնրը չի տեղափոխում, արդյունքում էլ այս երկրորդ 6’ կհայտնվի առաջին վեցից աջ, ինչպես չկարգավորված զանցվածում էր, հետԵբար տեղադրմամբ տեսակավորումը կայուն է:</p>
<div class="sourceCode" id="cb11" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb11-1"><a href="#cb11-1"></a>|----------------|</span>
<span id="cb11-2"><a href="#cb11-2"></a>| <span class="dv">4</span> <span class="dv">6</span> <span class="dv">9</span> <span class="dv">11</span> <span class="dv">12</span> *  |</span>
<span id="cb11-3"><a href="#cb11-3"></a>|          <span class="dv">6</span><span class="er">&#39;</span>    |</span>
<span id="cb11-4"><a href="#cb11-4"></a>|    . . .       |</span>
<span id="cb11-5"><a href="#cb11-5"></a>| <span class="dv">4</span> <span class="dv">6</span> <span class="dv">6</span><span class="er">&#39;</span> <span class="dv">5</span> <span class="dv">11</span> <span class="dv">12</span> |</span>
<span id="cb11-6"><a href="#cb11-6"></a>|----------------|</span></code></pre></div>
</section>
<section id="ադապտիվ-է---այո-1" class="level3">
<h3>Ադապտիվ է - այո</h3>
<p>Տեղադրությամբ տեսակավորումը ադապտիվ է իր բնույթով՝ կարիք չկա լրացուցիչ ինչ որ flag կամ այլ մի բան օգտագործենլու որպեսզի այն դառնա ադապտիվ:</p>
<div class="sourceCode" id="cb12" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb12-1"><a href="#cb12-1"></a><span class="dt">int</span> A[] = {<span class="dv">3</span>,<span class="dv">6</span>,<span class="dv">9</span>,<span class="dv">10</span>,<span class="dv">12</span>}</span>
<span id="cb12-2"><a href="#cb12-2"></a></span>
<span id="cb12-3"><a href="#cb12-3"></a>| I Pass            | II Pass           | III Pass           | IV Pass             |</span>
<span id="cb12-4"><a href="#cb12-4"></a>|-------------------+-------------------+--------------------+---------------------|</span>
<span id="cb12-5"><a href="#cb12-5"></a>| <span class="dv">3</span> * <span class="dv">9</span> <span class="dv">10</span> <span class="dv">12</span>       | <span class="dv">3</span> <span class="dv">6</span> * <span class="dv">10</span> <span class="dv">12</span>       | <span class="dv">3</span> <span class="dv">6</span> <span class="dv">9</span> * <span class="dv">12</span>         | <span class="dv">3</span> <span class="dv">6</span> <span class="dv">9</span> <span class="dv">10</span> *          |</span>
<span id="cb12-6"><a href="#cb12-6"></a>| <span class="dv">6</span>                 | . <span class="dv">9</span>               | . . <span class="dv">10</span>             | . . . <span class="dv">12</span>            |</span>
<span id="cb12-7"><a href="#cb12-7"></a>| <span class="dv">3</span> &gt; <span class="dv">6</span>, no, insert | <span class="dv">6</span> &gt; <span class="dv">9</span>, no, insert | <span class="dv">9</span> &gt; <span class="dv">10</span>, no, insert | <span class="dv">10</span> &gt; <span class="dv">12</span>, no, insert |</span>
<span id="cb12-8"><a href="#cb12-8"></a>|-------------------+-------------------+--------------------+---------------------|</span>
<span id="cb12-9"><a href="#cb12-9"></a>| #Comp: <span class="dv">1</span>          | #Comp: <span class="dv">1</span>          | #Comp: <span class="dv">1</span>           | #Compo: <span class="dv">1</span>           |</span>
<span id="cb12-10"><a href="#cb12-10"></a>| #Swap: <span class="dv">0</span>          | #Swap: <span class="dv">0</span>          | #Swap: <span class="dv">0</span>           | #Swap: <span class="dv">0</span>            | </span>
<span id="cb12-11"><a href="#cb12-11"></a></span>
<span id="cb12-12"><a href="#cb12-12"></a>Number of Comparisions: n - <span class="dv">1</span> ~  O(n)</span>
<span id="cb12-13"><a href="#cb12-13"></a>Number of Swaps:        <span class="dv">0</span> ~ O(<span class="dv">1</span>) </span>
<span id="cb12-14"><a href="#cb12-14"></a></span></code></pre></div>
</section>
<section id="դիտողություններ-1" class="level3">
<h3>Դիտողություններ</h3>
<ul>
<li>Տեղադրմամբ տեսակավորումը չունի օգտակար միջանկյալ արդյունք՝ k Փաս-ից հետո, k &lt; n-1</li>
<li>Այս տեսակավորումը իրականացնելիս նպատակահարմար է օգտագործել կապակցված ցուցակ, որովհետև էլեմենտների տեծափոխությյուն կատարելու անհրաժեշտությունը չկա: Հակառակն էլ է ճիշտ, կապակզված ցուցակ տեսակավրոելու համար ավելի հարմար է տեղադրմամբ տեսակավորման ալգորիթմը:</li>
</ul>
</section>
<section id="կոդը" class="level3">
<h3>Կոդը</h3>
<div class="sourceCode" id="cb13" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb13-1"><a href="#cb13-1"></a><span class="dt">void</span> InsertionSort(<span class="dt">int</span> A[], <span class="dt">int</span> n)</span>
<span id="cb13-2"><a href="#cb13-2"></a>{</span>
<span id="cb13-3"><a href="#cb13-3"></a>  <span class="dt">int</span> i, j, x;</span>
<span id="cb13-4"><a href="#cb13-4"></a>  <span class="cf">for</span>(i = <span class="dv">1</span>; i &lt; n; i++) <span class="co">//passes</span></span>
<span id="cb13-5"><a href="#cb13-5"></a>  {</span>
<span id="cb13-6"><a href="#cb13-6"></a>    j = i - <span class="dv">1</span>;</span>
<span id="cb13-7"><a href="#cb13-7"></a>    x = A[j]; <span class="co">// the element we want to sort, to insert in the sorted part of array</span></span>
<span id="cb13-8"><a href="#cb13-8"></a>    <span class="cf">while</span>(j &gt; -<span class="dv">1</span> &amp;&amp; A[j] &gt; x)</span>
<span id="cb13-9"><a href="#cb13-9"></a>    {</span>
<span id="cb13-10"><a href="#cb13-10"></a>      A[j + <span class="dv">1</span>] = A[j];</span>
<span id="cb13-11"><a href="#cb13-11"></a>      j--;  </span>
<span id="cb13-12"><a href="#cb13-12"></a>    }</span>
<span id="cb13-13"><a href="#cb13-13"></a>    A[j + <span class="dv">1</span>] = x;</span>
<span id="cb13-14"><a href="#cb13-14"></a>  }</span>
<span id="cb13-15"><a href="#cb13-15"></a>}</span></code></pre></div>
</section>
</section>
<section id="ընտրությամբ-selection-sort" class="level2">
<h2>Ընտրությամբ (Selection sort)</h2>
<p>Այս ալգորիթմը նույնպես տեսակավարում է Փասերով: Ամեն Փասում մի էլեմենտ գտնում է իր տեղը՝ տեսակավրովում է: Առաջին Փասում մենք ընտրում ենք առաջին տեղը և փնտրում ենք էլեմենտը այդ տեղի համար:</p>
<pre><code>int A[] ={9,7,4,3,6,5}
int i - pointing the position, that element will come in this place: minimum element
// will use two more pointers to find minimum
int j = k = i;

Steps for each pass
int j = k = i;
1. move j to the next element
2. from j = k to n do check if A[j] &lt; A[k] then k = j; j++; else j++;
3. swap(A[i], A[k])

After I Pass first element is sorted, now we should find an element for a second postion i = 1;

//We select a position and finding an element for that position
| I Pass          | II Pass         | III Pass         | IV Pass         | V Pass          |
|-----------------+-----------------+------------------+-----------------+-----------------|
| 9 &lt;- i,j,k      | 3             3 | 3                | 3            3  | 3            3  |
| 7               | 7 &lt;- i,j,k    4 | 4                | 4            4  | 4            4  |
| 4               | 4             7 | 7&lt;-i,j,k         | 5            5  | 5            5  |
| 3               | 9             9 | 9                | 9 &lt;- i,j,k   6  | 6            6  |
| 6               | 6             6 | 6                | 6            9  | 9 &lt;-i,j,k    7  |
| 5               | 5             5 | 5                | 7            7  | 7            9  |
|                 |                 |                  |                 |                 |
| at the end:     | at the end:     | at the end:      | at the end:     | at the end:     |
| i = 0           | i = 1           | i = 2            | i = 3           | i=4             |
| k = 3           | k = 2           | k = 5            | k = 4           | k=5             |
| j = 6           | j = 6           | j = 6            | j = 6           | j=6             |
| swap(A[i],A[k]) | swap(A[i],A[k]) | swap(A[i],A[k])  | swap(A[i],A[k]) | swap(A[i],A[k]) |
| one el. sorted  | two el. sorted  | three el. sorted | four el. sorted | all el. sorted  |
| smallest el.    | two smallest    | three smallest   | IV ....         | V .....         |
|-----------------+-----------------+------------------+-----------------+-----------------|
| #Comp: 5        | #Comp: 4        | #Comp: 3         | #Comp: 2        | #Comp: 1        |
| #Swap: 1        | #Swap: 1        | #Swap: 1         | #Swap: 1        | #Swap: 1        |

Number of Passes: n-1
Number of comparisions: 1+2+...+n-1 = n*(n-1)/2 ~ O(n^2)
Number of swap: n-1 ~ O(n)
</code></pre>
<section id="վերլուծություն-2" class="level3">
<h3>Վերլուծություն</h3>
<div class="sourceCode" id="cb15" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb15-1"><a href="#cb15-1"></a>Դիցուք ունենք n տարրանի զանգված, ապա.</span>
<span id="cb15-2"><a href="#cb15-2"></a>- Փասերի քանակը՝ (n-<span class="dv">1</span>)</span>
<span id="cb15-3"><a href="#cb15-3"></a>- Համեմատությունների քանակը՝ <span class="dv">1</span>+<span class="dv">2</span>+...+n-<span class="dv">1</span> = n*(n-<span class="dv">1</span>)/<span class="dv">2</span> ~ O(n^<span class="dv">2</span>)</span>
<span id="cb15-4"><a href="#cb15-4"></a>- տեղափոխությունների քանակը՝ n-<span class="dv">1</span> ~ O(n)</span></code></pre></div>
</section>
<section id="կայուն-է---ոչ" class="level3">
<h3>Կայուն է - ոչ</h3>
<p>Հենց առաջին Փասի վերջւոմ կատարվող տեղափոխության ժամանակ առաջին 8 կանցնի մյուս 8-ից՝ իրար նկատմամբ տեղերը կփոխվի. հետևաբար կայուն չէ:</p>
<div class="sourceCode" id="cb16" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb16-1"><a href="#cb16-1"></a>|  I Pass | after swap |</span>
<span id="cb16-2"><a href="#cb16-2"></a>|---------+------------|</span>
<span id="cb16-3"><a href="#cb16-3"></a>| i -&gt; <span class="dv">8</span><span class="er">&#39;</span> |          <span class="dv">2</span> |</span>
<span id="cb16-4"><a href="#cb16-4"></a>|       <span class="dv">3</span> |          <span class="dv">3</span> |</span>
<span id="cb16-5"><a href="#cb16-5"></a>|       <span class="dv">5</span> |          <span class="dv">5</span> |</span>
<span id="cb16-6"><a href="#cb16-6"></a>|       <span class="dv">8</span> |          <span class="dv">8</span> |</span>
<span id="cb16-7"><a href="#cb16-7"></a>|       <span class="dv">4</span> |          <span class="dv">4</span> |</span>
<span id="cb16-8"><a href="#cb16-8"></a>|  k -&gt; <span class="dv">2</span> |         <span class="dv">8</span><span class="er">&#39;</span> |</span>
<span id="cb16-9"><a href="#cb16-9"></a>|       <span class="dv">7</span> |          <span class="dv">7</span> |</span></code></pre></div>
</section>
<section id="ադապտիվ-է---ոչ" class="level3">
<h3>Ադապտիվ է - ոչ</h3>
<p>Ընտրությամբ տեսակավորման մեջ հնարավոր չէ այնպես անել որ ստուգի տվյալները արդեն իսկ դասավրոված են հերթականությամբ. ինչպես դա արեցինք Պղպջակային տեսակավորման ընթացակարգում: Ընտրությամբ տեսակավորումը միշտ աշխատում է O(n<sup>2</sup>) ժամանակում:</p>
</section>
<section id="դիտողություններ-2" class="level3">
<h3>Դիտողություններ</h3>
<ul>
<li>Ընտրությամբ տեսակավորումը միակ տեսակավորման ալգորիթմն է, որը օգտագործում է մինիմում քանակի տեղափոխություն(swap):</li>
<li>K Փաս հետո կունենանք k փոքագույն տարրերը, այսինք ընտրությամբ տեսակավորումը ունի օգտակար միջանկյալ արդյունք: Bubble sort K փաս հետո ունենւոմ ենք K մեծագույննեը այստեղ, K փոգրագույնները:</li>
</ul>
</section>
<section id="կոդը-1" class="level3">
<h3>Կոդը</h3>
<div class="sourceCode" id="cb17" data-org-language="C"><pre class="sourceCode c"><code class="sourceCode c"><span id="cb17-1"><a href="#cb17-1"></a><span class="dt">void</span> SelectionSort(<span class="dt">int</span> A[], <span class="dt">int</span> n)</span>
<span id="cb17-2"><a href="#cb17-2"></a>{</span>
<span id="cb17-3"><a href="#cb17-3"></a> <span class="cf">for</span>(i = <span class="dv">0</span>; i &lt; n-<span class="dv">1</span>; i++) <span class="co">// passes</span></span>
<span id="cb17-4"><a href="#cb17-4"></a> {</span>
<span id="cb17-5"><a href="#cb17-5"></a>   <span class="cf">for</span>(j = k = i; j &lt; n; j++) <span class="co">// every pass reduced comparision count</span></span>
<span id="cb17-6"><a href="#cb17-6"></a>   {</span>
<span id="cb17-7"><a href="#cb17-7"></a>     <span class="cf">if</span>(A[j] &gt; A[k])</span>
<span id="cb17-8"><a href="#cb17-8"></a>     {</span>
<span id="cb17-9"><a href="#cb17-9"></a>       k = j;</span>
<span id="cb17-10"><a href="#cb17-10"></a>     }</span>
<span id="cb17-11"><a href="#cb17-11"></a>   }</span>
<span id="cb17-12"><a href="#cb17-12"></a>   swap(A[i], A[k]);</span>
<span id="cb17-13"><a href="#cb17-13"></a> }</span>
<span id="cb17-14"><a href="#cb17-14"></a>}</span></code></pre></div>
</section>
</section>
<section id="արագ-quick-sort" class="level2">
<h2>Արագ (Quick sort)</h2>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on December  2, 2020
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/sorting.html">sorting</a></li><li><a href="/tags/algorithms.html">algorithms</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Wed, 02 Dec 2020 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/sorting-algorithms.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Online Courses</title>
    <link>http://imast.am/mitq/programming/online-courses.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#data-structures-algorithms">Data Structures &amp; Algorithms</a></li>
<li><a href="#programming-concepts">Programming Concepts</a></li>
</ul></div>
<section id="data-structures-algorithms" class="level1">
<h1>Data Structures &amp; Algorithms</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=0IAPZzGSbME&amp;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&amp;index=1">1. Introduction to Algorithms</a>
<ul>
<li><a href="https://www.youtube.com/watch?v=-JTq1BFBwmo&amp;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&amp;index=2">1.1 Priori Analysis and Posteriori Testing</a></li>
<li><a href="https://www.youtube.com/watch?v=FbYzBWdhMb0&amp;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&amp;index=3">1.2 Characteristics of Algorithm</a></li>
<li><a href="http://youtu.be/xGYsEqe9Vl0">1.3 How Write and Analyze Algorithm</a></li>
<li><a href="http://youtu.be/1U3Uwct45IY">1.4 Frequency Count Method</a></li>
<li><a href="http://youtu.be/9TlHvipP5yA">1.5.1 Time Complexity #1</a></li>
<li><a href="http://youtu.be/9SgLBjXqwd4">1.5.2 Time Complexity Example #2</a></li>
<li><a href="http://youtu.be/p1EnSvS3urU">1.5.3 Time Complexity Example #3</a></li>
<li><a href="http://youtu.be/w7t4_JUUTeg">1.6 Classes of functions</a></li>
<li><a href="http://youtu.be/5v-tKX2uRAk">1.7 Compare Class of Functions</a></li>
<li><a href="http://youtu.be/A03oI0znAoc">1.8.1 Asymptotic Notations Big Oh - Omega - Theta #1</a></li>
<li><a href="http://youtu.be/Nd0XDY-jVHs">1.8.2 Asymptotic Notations Big Oh - Omega - Theta #2</a></li>
<li><a href="http://youtu.be/NI4OKSvGAgM">1.9 Properties of Asymptotic Notations</a></li>
<li><a href="http://youtu.be/mwN18xfwNhk">1.10.1 Comparison of Functions #1</a></li>
<li><a href="http://youtu.be/WlBBTSL0ZRc">1.10.2 Comparison of Functions #2</a></li>
<li><a href="http://youtu.be/lj3E24nnPjI">1.11 Best Worst and Average Case Analysis</a></li>
<li><a href="http://youtu.be/wU6udHRIkcc">1.12 Disjoint Sets Data Structure - Weighted Union and Collapsing Find</a></li>
</ul></li>
<li><a href="http://youtu.be/2Rr2tW9zvRg">2 Divide And Conquer</a>
<ul>
<li><a href="http://youtu.be/4V30R3I1vLI">2.1.1 Recurrence Relation (T(n)= T(n-1) + 1) #1</a></li>
<li><a href="http://youtu.be/IawM82BQ4II">2.1.2 Recurrence Relation (T(n)= T(n-1) + n) #2</a></li>
<li><a href="http://youtu.be/MhT7XmxhaCE">2.1.3 Recurrence Relation (T(n)= T(n-1) + n) #3</a></li>
<li><a href="http://youtu.be/JvcqtZk2mng">2.1.4 Recurrence Relation (T(n)= T(n-1) + n) #4</a></li>
<li><a href="http://youtu.be/CyknhZbfMqc">2.2 Masters Theorem Decreasing Function</a></li>
<li><a href="http://youtu.be/8gt0D0IqU5w">2.3.1 Recurrence Relation Dividing Function T(n)=T(n/2)+1 #1</a></li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/ARvQcqJ_-NY">3. Greedy Method - Introduction</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/5dRGRueKU3M">4 Principle of Optimality - Dynamic Programming introduction</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/pcKY4hjDrxk">5.1 Graph Traversals - BFS &amp; DFS -Breadth First Search and Depth First Search</a>
<ul>
<li><a href="http://youtu.be/jFZsDDB0-vo">5.2 Articulation Point and Biconnected Components</a></li>
</ul></li>
<li><a href="http://youtu.be/DKCbsiDBN6c">6 Introduction to Backtracking - Brute Force Approach</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/3RBNPc0_Q6g">7 Branch and Bound Introduction</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/e2cF8a5aAhE">8. NP-Hard and NP-Complete Problems</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/V5-7GzOfADQ">9.1 Knuth-Morris-Pratt KMP String Matching Algorithm</a>
<ul>
<li>[[<a href="http://youtu.be/">http://youtu.be/</a>][]</li>
</ul></li>
<li><a href="http://youtu.be/jDM6_TnYIqE">10.1 AVL Tree - Insertion and Rotations</a></li>
<li><a href="http://youtu.be/ddsP7NecEBk">Asymptotic Notations - Simplified</a></li>
<li><a href="http://youtu.be/mFY0J5W8Udk">Hashing Technique - Simplified</a></li>
<li><a href="http://youtu.be/2raV0H9KqY8">Shortest Path Algorithms (Dijkstra and Bellman-Ford) - Simplified</a></li>
<li><a href="http://youtu.be/kyUpc_5705s">BFS DFS - Simplified</a></li>
<li><a href="http://youtu.be/q6RicK1FCUs">Tower of Hanoi Problem - Made Easy</a></li>
<li><a href="http://youtu.be/MJZd6uPi88E">Row-Major and Column-Major Mapping</a></li>
</ul>
</section>
<section id="programming-concepts" class="level1">
<h1>Programming Concepts</h1>
<ul>
<li><a href="http://youtu.be/OqLt2GfX6jg">Uses of pointers</a></li>
<li><a href="http://youtu.be/PdvGEI-P3-M">Stack vs Heap</a></li>
<li><a href="http://youtu.be/uMGwjNuidZU">Pointer Arithmetic - *p++; *++p; ++*p;</a></li>
<li><a href="http://youtu.be/868qXWoGS9E">Pointer to Array</a></li>
<li><a href="http://youtu.be/ygK0YON10sQ">Recursion and Stack</a></li>
</ul>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on December  1, 2020
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/courses.html">courses</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Tue, 01 Dec 2020 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/online-courses.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Coq installation</title>
    <link>http://imast.am/mitq/programming/how-to-install-coq.html</link>
    <description><![CDATA[<div class="post-content">

<p>*</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="co"># install ocaml palcage manager</span></span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="fu">sh</span> <span class="op">&lt;(</span><span class="ex">curl</span> -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh<span class="op">)</span></span>
<span id="cb1-3"><a href="#cb1-3"></a></span>
<span id="cb1-4"><a href="#cb1-4"></a><span class="co"># Install bubblewrap on Ubuntu 18.04</span></span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="fu">sudo</span> apt update</span>
<span id="cb1-6"><a href="#cb1-6"></a><span class="fu">sudo</span> apt install bubblewrap</span>
<span id="cb1-7"><a href="#cb1-7"></a></span>
<span id="cb1-8"><a href="#cb1-8"></a><span class="co"># Using OPAM to install Coq</span></span>
<span id="cb1-9"><a href="#cb1-9"></a><span class="bu">export</span> <span class="va">OPAMROOT=</span>~/opam-coq.8.8.2 <span class="co"># installation directory</span></span>
<span id="cb1-10"><a href="#cb1-10"></a><span class="ex">opam</span> init -n --comp=ocaml-base-compiler.4.02.3 -j 2 <span class="co"># 2 is the number of CPU cores</span></span>
<span id="cb1-11"><a href="#cb1-11"></a><span class="ex">opam</span> repo add coq-released http://coq.inria.fr/opam/released</span>
<span id="cb1-12"><a href="#cb1-12"></a><span class="ex">opam</span> install coq.8.8.2 <span class="kw">&amp;&amp;</span> <span class="ex">opam</span> pin add coq 8.8.2</span>
<span id="cb1-13"><a href="#cb1-13"></a></span>
<span id="cb1-14"><a href="#cb1-14"></a><span class="co"># Running Coq</span></span>
<span id="cb1-15"><a href="#cb1-15"></a><span class="bu">export</span> <span class="va">OPAMROOT=</span>~/opam-coq.8.8.2</span>
<span id="cb1-16"><a href="#cb1-16"></a><span class="bu">eval</span> <span class="kw">`</span><span class="ex">opam</span> config env<span class="kw">`</span></span>
<span id="cb1-17"><a href="#cb1-17"></a><span class="ex">coqc</span> -v</span>
<span id="cb1-18"><a href="#cb1-18"></a></span>
<span id="cb1-19"><a href="#cb1-19"></a><span class="co"># Using OPAM to install Coq packages</span></span>
<span id="cb1-20"><a href="#cb1-20"></a><span class="ex">opam</span> search coq</span>
<span id="cb1-21"><a href="#cb1-21"></a><span class="ex">opam</span> show coq-sudoku</span>
<span id="cb1-22"><a href="#cb1-22"></a><span class="ex">opam</span> install coq-sudoku</span>
<span id="cb1-23"><a href="#cb1-23"></a></span></code></pre></div>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on November 26, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/coq.html">coq</a></li><li><a href="/tags/SF.html">SF</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Mon, 26 Nov 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/how-to-install-coq.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Պատահական Երևույթներ նկարագրող մոդել</title>
    <link>http://imast.am/mitq/math/seminars/havtes-intro.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#պատահական-երևույթներ-նկարագրող-մոդել">Պատահական Երևույթներ նկարագրող մոդել</a><ul>
<li><a href="#գաղափարներ">Գաղափարներ</a></li>
</ul></li>
<li><a href="#հավանականության-սահմանումները">Հավանականության Սահմանումները</a><ul>
<li><a href="#աքսիոմատիկ">Աքսիոմատիկ</a></li>
<li><a href="#դասական">Դասական</a></li>
</ul></li>
</ul></div>
<p><strong>Մոդել = {Գաղափներ, Աքսիոմներ}</strong></p>
<section id="պատահական-երևույթներ-նկարագրող-մոդել" class="level1">
<h1>Պատահական Երևույթներ նկարագրող մոդել</h1>
<section id="գաղափարներ" class="level2">
<h2>Գաղափարներ</h2>
<ol>
<li><p><strong>Վիճակագրական փորձ</strong></p></li>
<li><p><strong>Տարական պատահույթ</strong> - փորձի պարզագույն ելք</p>
<p>Օրինակ. Զառ նետել` Ω = {ω<sub>1</sub>, ω<sub>2</sub>, ω<sub>3</sub>, ω<sub>4</sub>, ω<sub>5</sub>, ω<sub>6</sub>}</p>
<p>Ω - տարրական պատահույթների բազմություն</p></li>
<li><p><strong>Պատահույթ</strong></p>
<p>F = Ω-ի որևէ ենթաբազմությունների բազմ է, որը կազմում է σ Հանրահաշիվ</p></li>
</ol>
<span class="math display">\[\begin{equation}
   1. \Omega \in F \\
   2. A \subset F \Rightarrow \bar A \not\in F \Rightarrow
      \varnothing \subset F \\
   3. \forall A_1, A_2,...,A_n \in F \Rightarrow
      \bigcup_{i=1}^{\infty} A_{i} \subset F
\end{equation}
\]</span>
<p>F-ի տարրերը կոչվում են պատահույթներ: Կասենք A պատահույթը տեղի է ունեցել եթե փորձի տարրական ելքը ∈ A:</p>
<p>∅ ∈ F - անհնար պատահույթ, իսկ Ω - հավաստի պատահույթ Օրինակ. Զառի նետման խնդիրը <span class="math display">\[
      F={\varnothing, \Omega, \{\omega_1}, {\omega_2},...,{\omega_6},...\{...\} \} \\
      A=\{ \text{կբացվի զույգ թիվ} \} = \{ \omega_2, \omega_4, \omega_6 \} \\
      \bar A = \{ \text{կբացվի  կենտ  թիվ} \} = \{ \omega_1, \omega_3, \omega_5 \} \\
     \]</span></p>
<ol>
<li><p><strong>Հավանականություն</strong> (գաղափար)</p>
<p>Հավանականությունը պատահույթի հանդես գալու թվային գնահատականն է, որը մաթեմատիկական ֆունկցիա է՝ P : F → R, այսինքն ֆունկցիա է, որը <span class="math display">\[

\text{Աքսիոմներ} \\
\\
  1. P(\Omega) = 1 \\
  2. \forall A \in F, P(A) \geq 0 \\
  3. \forall A_1, A_2,...,A_n \text{անհամատեղելի պատահույթների
    համար, ապա} \\

     \bigcup_{i=1}^{n} A_{i}  = \Sigma_{i=1}^{n} P(A_{i})

   \]</span></p>
<p><strong>Սահմանում</strong>. Կասենք A և B անհամատեղելի պատահույթներ եթե A ∩ B = ∅ Օրինակ. կբացվի զույգ թէ կբացվի կենտ</p></li>
</ol>
</section>
</section>
<section id="հավանականության-սահմանումները" class="level1">
<h1>Հավանականության Սահմանումները</h1>
<section id="աքսիոմատիկ" class="level2">
<h2>Աքսիոմատիկ</h2>
<p>Կոլմոգորով</p>
<p>(Ω, F, P) - Հավանականային Տարածություն</p>
</section>
<section id="դասական" class="level2">
<h2>Դասական</h2>
<p>Ω տարերը վերջավոր են<br />
Ω ={ ω<sub>1</sub>, ω<sub>2</sub>, …, ω<sub>n</sub> }  հավասարահնարավոր, հվասարահավանական են<br />
F=Ω-ի ենթբազմերի բազմն է<br />
P(ω<sub>i</sub>) = 1/n, i=1,..,n<br />
Պտահույթի հավանականությունը</p>
<p>P(A)=<strong>N</strong><sub>A</sub>/N</p>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on October 31, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/math.html">math</a></li><li><a href="/tags/seminar.html">seminar</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Wed, 31 Oct 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/math/seminars/havtes-intro.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Սեմինարներ/Seminars</title>
    <link>http://imast.am/mitq/math/seminars.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#հավանականությունների-տեսություն">Հավանականությունների Տեսություն</a></li>
</ul></div>
<section id="հավանականությունների-տեսություն" class="level3">
<h3>Հավանականությունների Տեսություն</h3>
<p>Սկիզբը 31.10.2018, Փ. Հակոբյանի հետ Խոսելու ենք նաև «Ձևադրական ստուգման համակարգերի» մասին</p>
<ol>
<li><p><a href="./seminars/havtes-intro.html">Ներածություն</a></p></li>
</ol>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on October 31, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/math.html">math</a></li><li><a href="/tags/seminar.html">seminar</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Wed, 31 Oct 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/math/seminars.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>NixOS</title>
    <link>http://imast.am/mitq/programming/nixos.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#nixos-in-hetzner-machine">NixOS in hetzner machine</a><ul>
<li><a href="#enable-ssh">enable ssh</a></li>
</ul></li>
<li><a href="#install-with-nix-env">install with nix-env</a><ul>
<li><a href="#install-emacs">install emacs</a></li>
</ul></li>
<li><a href="#emacs-under-nix-shell">Emacs under nix-shell</a></li>
</ul></div>
<p><a href="https://github.com/Gabriel439/haskell-nix">https://github.com/Gabriel439/haskell-nix</a> <a href="https://www.domenkozar.com/2014/03/11/why-puppet-chef-ansible-arent-good-enough-and-we-can-do-better/">https://www.domenkozar.com/2014/03/11/why-puppet-chef-ansible-arent-good-enough-and-we-can-do-better/</a> <a href="https://wiki.ocharles.org.uk/posts/2014-02-04-how-i-develop-with-nixos.html">https://wiki.ocharles.org.uk/posts/2014-02-04-how-i-develop-with-nixos.html</a> <a href="http://lucumr.pocoo.org/2013/11/17/my-favorite-database/">http://lucumr.pocoo.org/2013/11/17/my-favorite-database/</a> <a href="https://www.fosskers.ca/blog/nix-en.html">https://www.fosskers.ca/blog/nix-en.html</a> <a href="https://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure">https://nixos.org/nixpkgs/manual/#users-guide-to-the-haskell-infrastructure</a></p>
<section id="nixos-in-hetzner-machine" class="level1">
<h1>NixOS in hetzner machine</h1>
<section id="enable-ssh" class="level2">
<h2>enable ssh</h2>
<p>enable sshd in hetzner, put in user data</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="co"># generate config file</span></span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="ex">nixos-generate-config</span> --root /mnt</span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="ex">vi</span> /mnt/etc/nixos/configuration.nix</span>
<span id="cb1-4"><a href="#cb1-4"></a></span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="co"># uncomment ssh</span></span>
<span id="cb1-6"><a href="#cb1-6"></a><span class="ex">services.sshd.enable</span> = true<span class="kw">;</span></span></code></pre></div>
</section>
</section>
<section id="install-with-nix-env" class="level1">
<h1>install with nix-env</h1>
<section id="install-emacs" class="level2">
<h2>install emacs</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="co"># figure out the proper attribute path for emacs pakages</span></span>
<span id="cb2-2"><a href="#cb2-2"></a><span class="ex">nix-env</span> -qaP emacs</span>
<span id="cb2-3"><a href="#cb2-3"></a><span class="op">&gt;</span> <span class="ex">nixpkgs.emacs25</span>  emacs-25.3</span>
<span id="cb2-4"><a href="#cb2-4"></a><span class="op">&gt;</span> <span class="ex">nixpkgs.emacs</span>    emacs-26.1</span>
<span id="cb2-5"><a href="#cb2-5"></a></span>
<span id="cb2-6"><a href="#cb2-6"></a><span class="co"># install emacs</span></span>
<span id="cb2-7"><a href="#cb2-7"></a><span class="ex">nix-env</span> -iA nixpkgs.emacs</span>
<span id="cb2-8"><a href="#cb2-8"></a></span></code></pre></div>
<p>_</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="co"># list ghc compilers</span></span>
<span id="cb3-2"><a href="#cb3-2"></a><span class="ex">nix-env</span> -f <span class="st">&quot;&lt;nixpkgs&gt;&quot;</span> -qaP -A haskell.compiler</span>
<span id="cb3-3"><a href="#cb3-3"></a></span>
<span id="cb3-4"><a href="#cb3-4"></a><span class="co"># install cabal-install</span></span>
<span id="cb3-5"><a href="#cb3-5"></a><span class="ex">nix-env</span> -f <span class="st">&quot;&lt;nixpkgs&gt;&quot;</span> -iA haskellPackages.ghc haskellPackages.cabal-install</span>
<span id="cb3-6"><a href="#cb3-6"></a><span class="co"># or more specific</span></span>
<span id="cb3-7"><a href="#cb3-7"></a><span class="ex">nix-env</span> -f <span class="st">&quot;&lt;nixpkgs&gt;&quot;</span> -iA haskell.compiler.integer-simple.ghc863 haskellPackages.cabal-install</span>
<span id="cb3-8"><a href="#cb3-8"></a></span>
<span id="cb3-9"><a href="#cb3-9"></a><span class="co"># enter nix-shell where ghc 8.6.3</span></span>
<span id="cb3-10"><a href="#cb3-10"></a> <span class="ex">nix-shell</span> -p haskell.compiler.integer-simple.ghc863</span>
<span id="cb3-11"><a href="#cb3-11"></a></span>
<span id="cb3-12"><a href="#cb3-12"></a><span class="co"># install (if not exists) and enter the nix-shell with ghc 8.4.4</span></span>
<span id="cb3-13"><a href="#cb3-13"></a><span class="ex">nix-shell</span> -p haskell.compiler.ghc844</span></code></pre></div>
</section>
</section>
<section id="emacs-under-nix-shell" class="level1">
<h1>Emacs under nix-shell</h1>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on October 14, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/nixos.html">nixos</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Sun, 14 Oct 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/nixos.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Set up development server</title>
    <link>http://imast.am/mitq/programming/dev-server-setup.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#connect-from-putty">connect from putty</a></li>
<li><a href="#create-user">create user</a></li>
<li><a href="#terminal">terminal</a></li>
<li><a href="#install-ghc">install ghc</a><ul>
<li><a href="#stack">stack</a></li>
<li><a href="#cabal">cabal</a></li>
</ul></li>
</ul></div>
<section id="connect-from-putty" class="level1">
<h1>connect from putty</h1>
<ol>
<li>generate RSA key in putty keygen</li>
<li>Co</li>
<li>Open PuttyGen</li>
<li>Click Load</li>
<li>Load your private key</li>
<li>Go to Conversions-&gt;Export OpenSSH (force new format) and export your private key</li>
<li>Copy your private key to ~/.ssh/id<sub>dsa</sub> (or id<sub>rsa</sub>).</li>
</ol>
<p><a href="https://stackoverflow.com/questions/2224066/how-to-convert-ssh-keypairs-generated-using-puttygenwindows-into-key-pairs-use">https://stackoverflow.com/questions/2224066/how-to-convert-ssh-keypairs-generated-using-puttygenwindows-into-key-pairs-use</a></p>
<ol>
<li>Create the RFC 4716 version of the public key using ssh-keygen</li>
</ol>
<p>ssh-keygen -e -f ~/.ssh/id<sub>dsa</sub> &gt; ~/.ssh/id<sub>dsacom</sub>.pub Convert the RFC 4716 version of the public key to the OpenSSH format:</p>
<p>ssh-keygen -i -f ~/.ssh/id<sub>dsacom</sub>.pub &gt; ~/.ssh/id<sub>dsa</sub>.pub</p>
</section>
<section id="create-user" class="level1">
<h1>create user</h1>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="ex">adduser</span> deployer</span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="fu">sudo</span> usermod -aG sudo deployer</span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="fu">mkdir</span> /home/deployer/.ssh</span>
<span id="cb1-4"><a href="#cb1-4"></a><span class="fu">cp</span> .ssh/authorized_keys /home/deployer/.ssh/</span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="fu">sudo</span> chown -R deployer:deployer /home/deployer/.ssh/</span>
<span id="cb1-6"><a href="#cb1-6"></a></span>
<span id="cb1-7"><a href="#cb1-7"></a><span class="co"># edit file</span></span>
<span id="cb1-8"><a href="#cb1-8"></a><span class="fu">sudo</span> vi /etc/ssh/sshd_config</span>
<span id="cb1-9"><a href="#cb1-9"></a><span class="ex">...</span></span>
<span id="cb1-10"><a href="#cb1-10"></a><span class="ex">PasswordAuthentication</span> no</span>
<span id="cb1-11"><a href="#cb1-11"></a><span class="ex">...</span></span>
<span id="cb1-12"><a href="#cb1-12"></a><span class="co"># allow from some hosts</span></span>
<span id="cb1-13"><a href="#cb1-13"></a><span class="co"># Settings that override the global settings for matching IP addresses only</span></span>
<span id="cb1-14"><a href="#cb1-14"></a><span class="ex">Match</span> address 192.0.2.0/24</span>
<span id="cb1-15"><a href="#cb1-15"></a>  <span class="ex">PasswordAuthentication</span> yes</span>
<span id="cb1-16"><a href="#cb1-16"></a><span class="ex">service</span> ssh reload</span>
<span id="cb1-17"><a href="#cb1-17"></a></span>
<span id="cb1-18"><a href="#cb1-18"></a><span class="co"># on remote server check permission and set to if needed</span></span>
<span id="cb1-19"><a href="#cb1-19"></a><span class="co"># chmod 700 .ssh</span></span>
<span id="cb1-20"><a href="#cb1-20"></a><span class="co"># chmod 600 .ssh/authorized_keys</span></span>
<span id="cb1-21"><a href="#cb1-21"></a><span class="bu">logout</span></span>
<span id="cb1-22"><a href="#cb1-22"></a><span class="fu">ssh</span> deployer@<span class="op">&lt;</span>ip_adddress<span class="op">&gt;</span></span></code></pre></div>
</section>
<section id="terminal" class="level1">
<h1>terminal</h1>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="co"># vi .profile add and save</span></span>
<span id="cb2-2"><a href="#cb2-2"></a><span class="bu">export</span> <span class="va">TERM=</span>xterm-256color</span>
<span id="cb2-3"><a href="#cb2-3"></a><span class="va">TZ=</span><span class="st">&#39;Asia/Yerevan&#39;</span>; <span class="bu">export</span> <span class="va">TZ</span></span>
<span id="cb2-4"><a href="#cb2-4"></a></span>
<span id="cb2-5"><a href="#cb2-5"></a><span class="co"># reload</span></span>
<span id="cb2-6"><a href="#cb2-6"></a><span class="bu">source</span> ~/.profile</span></code></pre></div>
</section>
<section id="install-ghc" class="level1">
<h1>install ghc</h1>
<p><a href="https://gist.github.com/yantonov/10083524">https://gist.github.com/yantonov/10083524</a></p>
<section id="stack" class="level2">
<h2>stack</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="fu">wget</span> -qO- https://get.haskellstack.org/ <span class="kw">|</span> <span class="fu">sh</span></span>
<span id="cb3-2"><a href="#cb3-2"></a><span class="ex">stack</span> setup</span>
<span id="cb3-3"><a href="#cb3-3"></a><span class="ex">stack</span> ghci</span></code></pre></div>
</section>
<section id="cabal" class="level2">
<h2>cabal</h2>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1"></a> <span class="bu">cd</span> Downlods</span>
<span id="cb4-2"><a href="#cb4-2"></a> <span class="ex">curl</span> -L -O https://downloads.haskell.org/~ghc/8.4.3/ghc-8.4.3-x86_64-deb9-linux.tar.xz</span>
<span id="cb4-3"><a href="#cb4-3"></a> <span class="fu">tar</span> xvf ghc-8.4.3-x86_64-deb9-linux.tar.xz</span>
<span id="cb4-4"><a href="#cb4-4"></a><span class="bu">cd</span> ghc-8.4.3/</span>
<span id="cb4-5"><a href="#cb4-5"></a><span class="co"># install to</span></span>
<span id="cb4-6"><a href="#cb4-6"></a> <span class="fu">mkdir</span> -p <span class="va">$HOME</span>/bin/ghc-8.4.3</span>
<span id="cb4-7"><a href="#cb4-7"></a><span class="ex">./configure</span> --prefix=<span class="va">$HOME</span>/bin/ghc-8.4.3</span>
<span id="cb4-8"><a href="#cb4-8"></a></span>
<span id="cb4-9"><a href="#cb4-9"></a><span class="co"># install</span></span>
<span id="cb4-10"><a href="#cb4-10"></a><span class="fu">make</span> install</span>
<span id="cb4-11"><a href="#cb4-11"></a></span>
<span id="cb4-12"><a href="#cb4-12"></a><span class="co"># symbol links</span></span>
<span id="cb4-13"><a href="#cb4-13"></a><span class="bu">cd</span> <span class="va">$HOME</span>/bin</span>
<span id="cb4-14"><a href="#cb4-14"></a><span class="fu">rm</span> -f ghc</span>
<span id="cb4-15"><a href="#cb4-15"></a><span class="fu">ln</span> -s <span class="kw">`</span><span class="bu">pwd</span><span class="kw">`</span>/ghc-<span class="va">$GHC_VERSION</span> ghc</span>
<span id="cb4-16"><a href="#cb4-16"></a></span>
<span id="cb4-17"><a href="#cb4-17"></a><span class="co"># add $HOME/Development/bin/ghc to $PATH</span></span>
<span id="cb4-18"><a href="#cb4-18"></a><span class="co"># add this line to ~/.profile</span></span>
<span id="cb4-19"><a href="#cb4-19"></a><span class="bu">export</span> <span class="va">GHC_HOME=$HOME</span>/bin/ghc</span>
<span id="cb4-20"><a href="#cb4-20"></a><span class="bu">export</span> <span class="va">PATH=$GHC_HOME</span>/bin:<span class="va">${PATH}</span></span>
<span id="cb4-21"><a href="#cb4-21"></a></span>
<span id="cb4-22"><a href="#cb4-22"></a><span class="co"># to use updated path without log off</span></span>
<span id="cb4-23"><a href="#cb4-23"></a><span class="bu">source</span> ~/.profile</span></code></pre></div>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on July  6, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/dev-server.html">dev-server</a></li><li><a href="/tags/linux-setup.html">linux-setup</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Fri, 06 Jul 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/dev-server-setup.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Logics</title>
    <link>http://imast.am/mitq/logic/logics.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#mathematical-logic">Mathematical Logic</a><ul>
<li><a href="#brings-mathematics-to-logic---boole-did">brings mathematics to logic - (Boole did)</a></li>
<li><a href="#brings-logic-to-mathematics">brings logic to mathematics</a><ul>
<li><a href="#getting-closer-to-leibnizs-dream">Getting Closer to Leibniz’s Dream</a></li>
</ul></li>
</ul></li>
<li><a href="#paul-snively-talk">Paul Snively talk</a></li>
<li><a href="#type-theory">Type theory</a><ul>
<li><a href="#origins-of-type-theory">Origins of type theory</a></li>
<li><a href="#type-systems">Type systems</a><ul>
<li><a href="#hindley-milner-type-system">HIndley-Milner Type System</a></li>
<li><a href="#wadler-blott">Wadler-Blott</a></li>
</ul></li>
</ul></li>
</ul></div>
<p><a href="https://www.youtube.com/watch?v=9YmEFCWlNLI&amp;list=PLTn74Qx5mPsQ1KbuGMHcK4q9odtR7Htdp&amp;index=7&amp;utm_medium=referral&amp;utm_campaign=ZEEF&amp;utm_source=https%3A%2F%2Ffp.zeef.com%2Farthur">From Aristotle to the iPhone Moshe Y. Vardi</a></p>
<ul>
<li>propositions is potentialy <code>true</code> or <code>false</code> statements.</li>
</ul>
<section id="mathematical-logic" class="level1">
<h1>Mathematical Logic</h1>
<section id="brings-mathematics-to-logic---boole-did" class="level2">
<h2>brings mathematics to logic - (Boole did)</h2>
<p>Aristotle (384-322 BC) - Syllogism - Forms of reasoning</p>
<p>Ramon Lull (1232-1315)</p>
<p>Gottfried Wilhelm Leibniz (1646-1716) - Invent binary notation, bits</p>
<ul>
<li>“When I was young, I found pleasure in the Lullian art”</li>
<li>Leibniz Dream a universal mathematical language, lingua characteristica universalis, in which all human knowledge can be expressed, and calculational rules, calclulus rationator, carried out by machines, to derive all logical relationships.</li>
<li>Leibniz’s wheel, 1671</li>
</ul>
<p>George Boole(1815-1864) - represent logic as algebra, literally <code>True=1</code>, <code>False=0</code> Boole’s insight: Aristotle’s syllogism are about classes of objects, which cab be treated algebraically.</p>
<ul>
<li>Boolean Algebra New axiom: x = x * x, logical conjaction is idempotic operation then:
<ul>
<li>x = x &amp; x</li>
<li>x - x &amp; x = 0</li>
<li>x(1-x) = 0, expresses the principle of contradiction, which Aristotle has described as the most fundamental axiom of all philosophy.</li>
</ul></li>
</ul>
<p>William Stanley Jevons(1835-1882) - Economist and Logician, develop “Boolean Algebra”, also interested in Mechanizing logical reasoning, and the actually he built the logical machine in 1870 “Logical Piano”. Augustus De Morgan(1806-1871) - De Morgan’s Laws: conjunction and disjunction can be expressed in terms of negation of each other.</p>
<p>Claude Elwood Shannon(1916-2001) - on 1937 Master’s thesis on boolean algebra and electrical circuit analogy.</p>
<p>Charles Sanders Peirce(1839-1914) -</p>
<ul>
<li>1889 … Calculating machines are specialized logical macines.</li>
<li>1887 …</li>
</ul>
</section>
<section id="brings-logic-to-mathematics" class="level2">
<h2>brings logic to mathematics</h2>
<p>E.P. Wigner (1960)</p>
<ul>
<li>1960 “On the unreasonable Effectivness fo Mathematis in the Natural Sciences”
<ul>
<li>Euclid: “The laws of nature are but the mathematical thoughts of God”</li>
<li>Galileo:</li>
<li>Descartes:</li>
<li>The empirical law of epistemology:</li>
</ul></li>
</ul>
<p>Mario Livio: “Is God a mathematican?”</p>
<p>Question: What makes mathematics so certain? Answer: Proofs - the high road to truth!</p>
<p>The Most influential Mathematican is Euclid (325-265 BC)</p>
<p>Dichotomy:</p>
<ul>
<li>Geometry: logically perfect science
<ul>
<li>On the gates of his academy, Plato has inscribed: “Let no ungeometrical person enter here.”</li>
</ul></li>
<li>Algebra and calculus: shaky faoundations</li>
</ul>
<p>19th century Reversal:</p>
<p>Bolyai and Lobachevsky: non-Euclidean geometry Bolzano, Cauchy, Cantor, Dedekind and Weierstrass: formalization of calclulus in terms of infinity - the role iof inifinte is controversial</p>
<p>Central Issue: What is a rigorous proof?</p>
<p>The infinite Old Controversary: Aristotle: “Infinitum Actu Non Datur” - there is no actual infinity. St. Augustine</p>
<p>Amir Aczel, “The Mystery of the Aleph” - Aleph the simbol of inifinte</p>
<p>Infinitely Contraversial</p>
<ul>
<li><p>Contor’s Theorem, 1874: There are infinitely many inifinties! (Proof uses self-reference) - now the phylosophical debate become mathematical debate</p></li>
<li><p>Mathematical Controversy:</p>
<ul>
<li>Leibniz</li>
<li>Gauss</li>
<li>Kronecher</li>
<li>Hilbert</li>
<li>Frege</li>
</ul></li>
</ul>
<p>The most important Logic after Aristotle (1848-1925)</p>
<section id="getting-closer-to-leibnizs-dream" class="level3">
<h3>Getting Closer to Leibniz’s Dream</h3>
<ol>
<li><p>Frege</p>
<p>Frege’s Contribution, book Begriffsschrift, “Langugage of concept” 1879: want to answer the question what is the language of mathematics, first step to metamatematics. Central to Frege’s Work: sets, i.e. collections of objects.</p>
<ul>
<li>Objects, 2</li>
<li>Predicates(relationships), 2 &lt; 3</li>
<li>Operations(functions), 2 + 3</li>
<li>Logical operations (a la Boole), “and”</li>
<li>Quantifiers, “for all”, “most”</li>
</ul>
<p>Frege show that you can take the old Arsitotle logic and write it formally. Back to Aristotle</p>
<ul>
<li>All men are mortal</li>
<li>“For all <code>x</code>, if <code>x</code> is a man, then <code>x</code> is mortal”</li>
<li>(∀x)(Man(x) -&gt; Mortal(x)): First-Order Logic</li>
</ul>
<p>van Heijenoort, From Frege to Godel, 1967, say about Frege work- “perhaps the most important single work ever written in logic”</p></li>
<li><p>Russel</p>
<p>Russell’s Letter A letter from Russell to Frege, June 16, 1902 … miner disagreement - Russel paradox show that Frege system is inconsistent.</p>
<p>Appendinx to Frege 1903 volume:</p>
<p>Despair:</p>
<p>Russell itself understood the problem - was the concept Central to Frege’s Work: sets, i.e. collections of objects. in Boole work called classes of objects, now more precise we call them set of objects.</p>
<p>Principia Mathemaca, by Russel 1910-1927, page 2000</p>
<ul>
<li>systematic derivation of mathematics from logic</li>
<li>avoided obvious paradox</li>
<li>attempt to derive all mathematical truths</li>
<li>Uses an elaborate system of types</li>
<li>the prove of 1+1=2, vol 1, page 397</li>
</ul>
<p>show how to base mathematics on Logic, called Logicism - basic mathematics on logic</p>
<p>At first people think that problem is solved, then realized that: Frege has a small book and Russell found a paradox, now we have 3 volumes and 2000 pages, hwo know how many paradox are lurking betwwen the lines of Principia Mathemaca.</p>
<p>The crises has not been resolved and into that crices stepped the David Hilbert (1862-1943), king of mathemacs.</p>
<p>Mathematical logic as based on the theory of types (1908)</p>
<ul>
<li>Hierarchy of types</li>
<li>No totality can contain members defined in terms of itself</li>
</ul></li>
<li><p>Hilbert’s Program (1922-1930)</p>
<p>Formalize mathemacs and establish that:</p>
<ul>
<li>Mathemacs is consistent: a mathematical statement and its negation cannot even both be proved.</li>
<li>Mathemacs is complete: all true mathematical statements can be proved</li>
<li>Mathemacs is decidable: there is a mechanical way to determine whether a given mathematical statement is true or false.</li>
</ul></li>
<li><p>The Demiise of Hilbert’s Program</p>
<p>K. Godel (1930-1933)</p>
<ul>
<li>Incompleteness of ordinary arithmetic
<ul>
<li>there is no systematic way of resolving all mathematical questions.</li>
</ul></li>
<li>Impossibility of proving consistency of mathemacs. (cannot prove consistency mathemacs mathematicaly)</li>
<li>“This statement cannot be proved”</li>
<li>Any sufficient powerful system cannot be both consistent and complete</li>
<li>Arithmetic cannot prove its own consistency</li>
<li>End of Hilbert’s program</li>
</ul>
<p>A. Church and A. Turing (1936-1937)</p>
<ul>
<li>Undecidability of first-order logic.
<ul>
<li>The set of all true firs-order logic formulas is not computable -there is no systematic computational way to decide the truth of first-order logic formulas.</li>
</ul></li>
</ul></li>
<li><p>The Death of Program</p>
<p>Koninsberg, September 7, 1930: Conference on The Epistemology of The Exact Sciences.</p></li>
<li><p>Birth of Computer Science</p>
<p>Church, Godel, Kleene, Post, Turing: Mathematical proofs have to be “machine checkable” - computation lies at the heart of mathematics!</p>
<p>Fundamental Question: What is “machine checkable”</p></li>
<li><p>ENIAC</p>
<p>Feb 14, 1946 18000 vacuum tubes 30 tons 150KW</p>
<p>von Neumann joind the project in August 1944</p>
<ul>
<li>Design base on Boole’s and Turing’s ideas - von Neumann architecture</li>
</ul></li>
<li><p>Closing the Circle</p>
<p>By the early 1950s dozens of “” by the early 1950 dozens of “johniacs”, reasoning machines, have been built around the world.</p>
<p>Leibniz’s dream came truth! From reasoning to patterns of reasoning to logic to computers to computers that</p></li>
<li><p>Logic in Computer science</p>
<p>M. Davis (1988) Influences of Mathematical logic on Computer Science Christos H. Papadimitruou (2001)</p></li>
</ol>
</section>
</section>
</section>
<section id="paul-snively-talk" class="level1">
<h1>Paul Snively talk</h1>
<p>Charles Lutwidge Dodgson(1832-1898) = Lewis Caroll - Brilliant teacher of formal logic via literary nonsense</p>
<p>Bertrand Russell - “Principia Mathematica” (“P M”) - all posible mathematics in formal logic. 1+1=2 takes 450 pages to prove. there is a gap in “P M” - substitution of variables was not treated fomrally</p>
<p>Alonzo Church - look at “P M” and said. “I can do better”.</p>
<ul>
<li>Wanted to put “Principia Mathematica” on an even more formal logical footing.</li>
<li>Created a new logical formalism including substitution, abstraction, application - Called λ calculus</li>
<li>λ calculus very few rule logic. Untyped λ calculus was and is a Logic. It was designed as a Logic, it was developed as a Logic and it suppose to lay a new Foundation just like “Principia Mathematica” was for all Mathemacs. And it suppose to replace the “Principia Mathemaca”. That was Church goal.</li>
</ul>
<p>Alnozo Church’s Student</p>
<ul>
<li><p>Raymond Smullyan - puzzle Knightes and Knaves</p></li>
<li><p>Stephen Cole Kleene, John Barkley Rosser, Sr.</p>
<ul>
<li>proved untyped λ calculus inconsistent (Kleene-Rosser Paradox, 1936), and the proove called Y-combinator: <code>λ f.(λ x.(f (x x)) λ x.(f (x x)))</code>, and this is a the rule how we do general recusriosn in the untyped λ called, turns out that general recursion is logical inconsistency. You cannot reason about your code in the presence of the general recursion. And this is that we say that λ calculus was a Logic from day one,was formal Logic from day one. It was proven incosistent and that is why <code>Types</code>. And in fact even the simplke typed λ calculus inforces consistency in λ calculus</li>
</ul></li>
</ul>
<p>Takeaways: f : A -&gt; B(function from A to B) means ∀ a:A E b:B such that b = f(a) e.g. factorial : Int -&gt; Int, what is wrong with this function? factorial function is not defined for all integers, for example negative integer passing to factorial cause loop forever, exception… the is a logical inconsistency. So, Either we have to make the Domain smaller, we can do on <code>Nat</code> types. If your function is not defined for every value in the Domain, which is called a partial function (oposite total functions), then you run the risk of Logical incosistency. You run the risk introdcuing inconsistency that reveal by throwing exception or going into infinite loop or crashing, When we advocate the functional programming should be also be clear that we advocateing the total functional programming: no parital functions. If you want to readon about your code Logically then your functions do need to be the total.</p>
</section>
<section id="type-theory" class="level1">
<h1>Type theory</h1>
<section id="origins-of-type-theory" class="level2">
<h2>Origins of type theory</h2>
<ul>
<li>type theory began as part of a failed program to prove the consistency of arithmetic</li>
</ul>
</section>
<section id="type-systems" class="level2">
<h2>Type systems</h2>
<section id="hindley-milner-type-system" class="level3">
<h3>HIndley-Milner Type System</h3>
<p>Moses Schonfinkel - Combinatory logic</p>
<ul>
<li>On the building blocks of mathematical logic(1924)
<ul>
<li>Currying
<ul>
<li>fa()</li>
</ul></li>
<li>Combinatory logic</li>
</ul></li>
</ul>
</section>
<section id="wadler-blott" class="level3">
<h3>Wadler-Blott</h3>
</section>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on April 20, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/logic.html">logic</a></li><li><a href="/tags/math.html">math</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Fri, 20 Apr 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/logic/logics.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>Rail+NGinx+PostgreSQL+Redis setup</title>
    <link>http://imast.am/mitq/programming/deployment.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#todo">TODO</a></li>
<li><a href="#create-ssh-key-for-remote-server">create ssh key for remote server</a></li>
<li><a href="#server-fingerprint-changes">server fingerprint changes</a></li>
<li><a href="#create-user">create user</a></li>
<li><a href="#nginx">Nginx</a></li>
<li><a href="#set-domain-or-subdomain">set domain or subdomain</a></li>
<li><a href="#lets-encrypt">Let’s Encrypt</a></li>
<li><a href="#ruby-nodejs-go-rails-instruction">Ruby, Nodejs, <span>Go rails instruction</span></a></li>
<li><a href="#postgresql">PostgreSQL</a><ul>
<li><a href="#postgresql-hacks">postgresql hacks</a></li>
</ul></li>
<li><a href="#redis">Redis</a></li>
<li><a href="#mina">Mina</a><ul>
<li><a href="#install-mina-gem">install mina gem</a></li>
</ul></li>
<li><a href="#some-commands-with-no-password">some commands with no password</a><ul>
<li><a href="#deploy-with-mina">deploy with mina</a></li>
</ul></li>
<li><a href="#backup-gem">Backup gem</a></li>
<li><a href="#cron">CRON</a><ul>
<li><a href="#activate-log-for-cron-jobs">activate log for cron jobs</a></li>
</ul></li>
<li><a href="#convert-putty-to-ssh-agent">Convert putty to ssh-agent</a></li>
<li><a href="#linux-commands">Linux commands</a><ul>
<li><a href="#folder-size">folder size</a></li>
<li><a href="#system.d">system.d</a></li>
<li><a href="#logs">logs</a></li>
<li><a href="#bash">bash</a></li>
</ul></li>
</ul></div>
<section id="todo" class="level1">
<h1>TODO</h1>
<ul>
<li>Backup Letsencrypt folder</li>
<li>backup config files move to shared folder</li>
</ul>
</section>
<section id="create-ssh-key-for-remote-server" class="level1">
<h1>create ssh key for remote server</h1>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="fu">ssh-keygen</span> -t rsa</span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="fu">cat</span> ~/.ssh/<span class="op">&lt;</span>ssh_file_name<span class="op">&gt;</span>.pub</span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="fu">ssh</span> user@<span class="op">&lt;</span>ip<span class="op">&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4"></a><span class="co"># check for key in server</span></span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="fu">cat</span> ~/.ssh/authorized_keys</span></code></pre></div>
</section>
<section id="server-fingerprint-changes" class="level1">
<h1>server fingerprint changes</h1>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="fu">ssh-keygen</span> -f <span class="st">&quot;/home/arthur/.ssh/known_hosts&quot;</span> -R <span class="op">&lt;</span>ip_address<span class="op">&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2"></a><span class="fu">ssh-keygen</span> -f <span class="st">&quot;/home/arthur/.ssh/known_hosts&quot;</span> -R <span class="op">&lt;</span>domain_name<span class="op">&gt;</span></span></code></pre></div>
</section>
<section id="create-user" class="level1">
<h1>create user</h1>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="ex">adduser</span> deployer</span>
<span id="cb3-2"><a href="#cb3-2"></a><span class="fu">sudo</span> usermod -aG sudo deployer</span>
<span id="cb3-3"><a href="#cb3-3"></a><span class="fu">mkdir</span> /home/deployer/.ssh</span>
<span id="cb3-4"><a href="#cb3-4"></a><span class="fu">cp</span> .ssh/authorized_keys /home/deployer/.ssh/</span>
<span id="cb3-5"><a href="#cb3-5"></a><span class="fu">sudo</span> chown -R deployer:deployer /home/deployer/.ssh/</span>
<span id="cb3-6"><a href="#cb3-6"></a></span>
<span id="cb3-7"><a href="#cb3-7"></a><span class="co"># edit file</span></span>
<span id="cb3-8"><a href="#cb3-8"></a><span class="fu">sudo</span> vi /etc/ssh/sshd_config</span>
<span id="cb3-9"><a href="#cb3-9"></a><span class="ex">...</span></span>
<span id="cb3-10"><a href="#cb3-10"></a><span class="ex">PasswordAuthentication</span> no</span>
<span id="cb3-11"><a href="#cb3-11"></a><span class="ex">...</span></span>
<span id="cb3-12"><a href="#cb3-12"></a><span class="co"># allow from some hosts</span></span>
<span id="cb3-13"><a href="#cb3-13"></a><span class="co"># Settings that override the global settings for matching IP addresses only</span></span>
<span id="cb3-14"><a href="#cb3-14"></a><span class="ex">Match</span> address 192.0.2.0/24</span>
<span id="cb3-15"><a href="#cb3-15"></a>  <span class="ex">PasswordAuthentication</span> yes</span>
<span id="cb3-16"><a href="#cb3-16"></a><span class="ex">service</span> ssh reload</span>
<span id="cb3-17"><a href="#cb3-17"></a></span>
<span id="cb3-18"><a href="#cb3-18"></a><span class="co"># on remote server check permission and set to if needed</span></span>
<span id="cb3-19"><a href="#cb3-19"></a><span class="co"># chmod 700 .ssh</span></span>
<span id="cb3-20"><a href="#cb3-20"></a><span class="co"># chmod 600 .ssh/authorized_keys</span></span>
<span id="cb3-21"><a href="#cb3-21"></a><span class="bu">logout</span></span>
<span id="cb3-22"><a href="#cb3-22"></a><span class="fu">ssh</span> deployer@<span class="op">&lt;</span>ip_adddress<span class="op">&gt;</span></span></code></pre></div>
</section>
<section id="nginx" class="level1">
<h1>Nginx</h1>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1"></a><span class="co"># https://websiteforstudents.com/install-nginx-latest-version-ubuntu-16-10-17-04/</span></span>
<span id="cb4-2"><a href="#cb4-2"></a><span class="co"># For the stable version, change mainline to stable.</span></span>
<span id="cb4-3"><a href="#cb4-3"></a><span class="fu">sudo</span> sh -c <span class="st">&#39;echo &quot;deb http://nginx.org/packages/mainline/ubuntu/ `lsb_release -cs` nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list&#39;</span></span>
<span id="cb4-4"><a href="#cb4-4"></a><span class="fu">sudo</span> sh -c <span class="st">&#39;echo &quot;deb-src http://nginx.org/packages/mainline/ubuntu/ `lsb_release -cs` nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list&#39;</span></span>
<span id="cb4-5"><a href="#cb4-5"></a><span class="fu">wget</span> -q http://nginx.org/keys/nginx_signing.key -O - <span class="kw">|</span> <span class="fu">sudo</span> apt-key add -</span>
<span id="cb4-6"><a href="#cb4-6"></a><span class="fu">sudo</span> apt -y update</span>
<span id="cb4-7"><a href="#cb4-7"></a><span class="ex">apt-cache</span> policy nginx</span>
<span id="cb4-8"><a href="#cb4-8"></a><span class="fu">sudo</span> apt install -y nginx</span>
<span id="cb4-9"><a href="#cb4-9"></a><span class="ex">nginx</span> -v</span>
<span id="cb4-10"><a href="#cb4-10"></a><span class="fu">sudo</span> systemctl enable nginx</span>
<span id="cb4-11"><a href="#cb4-11"></a><span class="fu">sudo</span> service nginx start</span>
<span id="cb4-12"><a href="#cb4-12"></a><span class="ex">systemctl</span> status nginx</span></code></pre></div>
</section>
<section id="set-domain-or-subdomain" class="level1">
<h1>set domain or subdomain</h1>
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1"></a><span class="co"># add A-record to dns server</span></span>
<span id="cb5-2"><a href="#cb5-2"></a><span class="fu">sudo</span> vi  /etc/hosts</span>
<span id="cb5-3"><a href="#cb5-3"></a><span class="ex">127.0.1.1</span> test.<span class="op">&lt;</span>domain_name<span class="op">&gt;</span> test</span>
<span id="cb5-4"><a href="#cb5-4"></a><span class="ex">127.0.0.1</span> localhost</span></code></pre></div>
</section>
<section id="lets-encrypt" class="level1">
<h1>Let’s Encrypt</h1>
<div class="sourceCode" id="cb6"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb6-1"><a href="#cb6-1"></a> <span class="co"># it is easy to get certificate before you have the advacned nginx config for</span></span>
<span id="cb6-2"><a href="#cb6-2"></a> <span class="co"># your site</span></span>
<span id="cb6-3"><a href="#cb6-3"></a><span class="fu">sudo</span> add-apt-repository ppa:certbot/certbot</span>
<span id="cb6-4"><a href="#cb6-4"></a><span class="fu">sudo</span> apt update -y</span>
<span id="cb6-5"><a href="#cb6-5"></a><span class="fu">sudo</span> apt install -y python-certbot-nginx</span>
<span id="cb6-6"><a href="#cb6-6"></a><span class="fu">sudo</span> systemctl reload nginx</span>
<span id="cb6-7"><a href="#cb6-7"></a><span class="ex">verify</span> the syntax of configurations</span>
<span id="cb6-8"><a href="#cb6-8"></a><span class="fu">sudo</span> nginx -t</span>
<span id="cb6-9"><a href="#cb6-9"></a><span class="fu">sudo</span> certbot certonly --dry-run --nginx -d <span class="op">&lt;</span>domain_name<span class="op">&gt;</span> -d www.<span class="op">&lt;</span>domain_name<span class="op">&gt;</span></span>
<span id="cb6-10"><a href="#cb6-10"></a></span>
<span id="cb6-11"><a href="#cb6-11"></a><span class="co"># </span><span class="al">TODO</span><span class="co">: backup /etc/letsencrypt fodler</span></span>
<span id="cb6-12"><a href="#cb6-12"></a><span class="co"># configuration directory at /etc/letsencrypt. You should make a</span></span>
<span id="cb6-13"><a href="#cb6-13"></a><span class="co"># secure backup of this folder now. This configuration directory will</span></span>
<span id="cb6-14"><a href="#cb6-14"></a><span class="co"># also contain certificates and private keys obtained by Certbot so</span></span>
<span id="cb6-15"><a href="#cb6-15"></a><span class="co"># making regular backups of this folder is ideal.</span></span>
<span id="cb6-16"><a href="#cb6-16"></a></span>
<span id="cb6-17"><a href="#cb6-17"></a><span class="co"># at first comment ssl parts from nginx config for the site we want to get  certificate</span></span>
<span id="cb6-18"><a href="#cb6-18"></a><span class="co"># </span><span class="al">TODO</span><span class="co">: generate pre-certifiacation config for site</span></span>
<span id="cb6-19"><a href="#cb6-19"></a><span class="co"># enter email address, c - is canceling all process.</span></span>
<span id="cb6-20"><a href="#cb6-20"></a><span class="fu">sudo</span> certbot --nginx -d <span class="op">&lt;</span>domain_name<span class="op">&gt;</span> -d www.<span class="op">&lt;</span>domain_name<span class="op">&gt;</span></span>
<span id="cb6-21"><a href="#cb6-21"></a></span>
<span id="cb6-22"><a href="#cb6-22"></a><span class="fu">sudo</span> certbot renew --dry-run</span></code></pre></div>
</section>
<section id="ruby-nodejs-go-rails-instruction" class="level1">
<h1>Ruby, Nodejs, <a href="https://gorails.com/setup/ubuntu/16.04">Go rails instruction</a></h1>
<p>Nodejs</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb7-1"><a href="#cb7-1"></a><span class="ex">curl</span> -sL https://deb.nodesource.com/setup_10.x <span class="kw">|</span> <span class="fu">sudo</span> -E bash -</span>
<span id="cb7-2"><a href="#cb7-2"></a><span class="fu">sudo</span> apt -y update</span>
<span id="cb7-3"><a href="#cb7-3"></a><span class="fu">sudo</span> apt -y install git-core curl zlib1g-dev build-essential libssl-dev</span>
<span id="cb7-4"><a href="#cb7-4"></a><span class="fu">sudo</span> apt -y install  libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev</span>
<span id="cb7-5"><a href="#cb7-5"></a><span class="fu">sudo</span> apt -y install  libcurl4-openssl-dev libffi-dev nodejs</span></code></pre></div>
<p>Yarn</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb8-1"><a href="#cb8-1"></a><span class="ex">curl</span> -sL https://dl.yarnpkg.com/debian/pubkey.gpg <span class="kw">|</span> <span class="fu">sudo</span> apt-key add -</span>
<span id="cb8-2"><a href="#cb8-2"></a><span class="bu">echo</span> <span class="st">&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;</span> <span class="kw">|</span> <span class="fu">sudo</span> tee /etc/apt/sources.list.d/yarn.list</span>
<span id="cb8-3"><a href="#cb8-3"></a><span class="fu">sudo</span> apt-get update <span class="kw">&amp;&amp;</span> <span class="fu">sudo</span> apt-get install yarn</span></code></pre></div>
<p>rbenv</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb9-1"><a href="#cb9-1"></a><span class="bu">cd</span></span>
<span id="cb9-2"><a href="#cb9-2"></a><span class="fu">git</span> clone https://github.com/rbenv/rbenv.git ~/.rbenv</span>
<span id="cb9-3"><a href="#cb9-3"></a><span class="bu">echo</span> <span class="st">&#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;</span> <span class="op">&gt;&gt;</span> ~/.bashrc</span>
<span id="cb9-4"><a href="#cb9-4"></a><span class="bu">echo</span> <span class="st">&#39;eval &quot;$(rbenv init -)&quot;&#39;</span> <span class="op">&gt;&gt;</span> ~/.bashrc</span>
<span id="cb9-5"><a href="#cb9-5"></a><span class="bu">exec</span> <span class="va">$SHELL</span></span>
<span id="cb9-6"><a href="#cb9-6"></a></span>
<span id="cb9-7"><a href="#cb9-7"></a><span class="fu">git</span> clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build</span>
<span id="cb9-8"><a href="#cb9-8"></a><span class="bu">echo</span> <span class="st">&#39;export PATH=&quot;$HOME/.rbenv/plugins/ruby-build/bin:$PATH&quot;&#39;</span> <span class="op">&gt;&gt;</span> ~/.bashrc</span>
<span id="cb9-9"><a href="#cb9-9"></a><span class="bu">exec</span> <span class="va">$SHELL</span></span>
<span id="cb9-10"><a href="#cb9-10"></a></span>
<span id="cb9-11"><a href="#cb9-11"></a><span class="ex">rbenv</span> install 2.5.1</span>
<span id="cb9-12"><a href="#cb9-12"></a><span class="ex">rbenv</span> global 2.5.1</span>
<span id="cb9-13"><a href="#cb9-13"></a><span class="ex">ruby</span> -v</span>
<span id="cb9-14"><a href="#cb9-14"></a></span>
<span id="cb9-15"><a href="#cb9-15"></a><span class="bu">echo</span> <span class="st">&quot;gem: --no-document&quot;</span> <span class="op">&gt;</span> ~/.gemrc</span>
<span id="cb9-16"><a href="#cb9-16"></a><span class="ex">gem</span> install bundler</span>
<span id="cb9-17"><a href="#cb9-17"></a><span class="ex">rbenv</span> rehash</span>
<span id="cb9-18"><a href="#cb9-18"></a><span class="ex">gem</span> list rails</span>
<span id="cb9-19"><a href="#cb9-19"></a><span class="ex">gem</span> env home</span>
<span id="cb9-20"><a href="#cb9-20"></a></span>
<span id="cb9-21"><a href="#cb9-21"></a><span class="co"># Commands</span></span>
<span id="cb9-22"><a href="#cb9-22"></a><span class="ex">rbenv</span> install -l <span class="co"># list of versions that you can choose to install.</span></span>
<span id="cb9-23"><a href="#cb9-23"></a><span class="ex">rbenv</span> versions <span class="co"># Lists all Ruby versions known to rbenv</span></span>
<span id="cb9-24"><a href="#cb9-24"></a><span class="ex">rbenv</span> version <span class="co"># Displays the currently active Ruby version</span></span></code></pre></div>
</section>
<section id="postgresql" class="level1">
<h1>PostgreSQL</h1>
<div class="sourceCode" id="cb10"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb10-1"><a href="#cb10-1"></a><span class="fu">sudo</span> sh -c <span class="st">&#39;echo &quot;deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main&quot; &gt;&gt; /etc/apt/sources.list.d/pgdg.list&#39;</span></span>
<span id="cb10-2"><a href="#cb10-2"></a><span class="fu">wget</span> -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - <span class="kw">|</span> <span class="fu">sudo</span> apt-key add -</span>
<span id="cb10-3"><a href="#cb10-3"></a><span class="fu">sudo</span> apt update -y</span>
<span id="cb10-4"><a href="#cb10-4"></a><span class="fu">sudo</span> apt -y install postgresql postgresql-contrib libpq-dev</span>
<span id="cb10-5"><a href="#cb10-5"></a><span class="co"># add user auth</span></span>
<span id="cb10-6"><a href="#cb10-6"></a><span class="fu">sudo</span> vi /etc/postgresql/10//main/pg_hba.conf</span>
<span id="cb10-7"><a href="#cb10-7"></a><span class="bu">local</span>   <span class="op">&lt;</span><span class="ex">db_name</span><span class="op">&gt;</span> <span class="op">&lt;</span>user_role<span class="op">&gt;</span> md5</span>
<span id="cb10-8"><a href="#cb10-8"></a><span class="fu">sudo</span> systemctl status  postgresql</span>
<span id="cb10-9"><a href="#cb10-9"></a><span class="fu">sudo</span> systemctl enable  postgresql</span>
<span id="cb10-10"><a href="#cb10-10"></a><span class="fu">sudo</span> systemctl restart postgresql</span></code></pre></div>
<p>create db user, set postgres password</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb11-1"><a href="#cb11-1"></a><span class="fu">sudo</span> su postgres</span>
<span id="cb11-2"><a href="#cb11-2"></a><span class="ex">psql</span></span>
<span id="cb11-3"><a href="#cb11-3"></a><span class="co"># set password for psotgres</span></span>
<span id="cb11-4"><a href="#cb11-4"></a>\<span class="ex">password</span> --</span>
<span id="cb11-5"><a href="#cb11-5"></a><span class="co"># &lt;your_password for super user&gt;</span></span>
<span id="cb11-6"><a href="#cb11-6"></a><span class="ex">create</span> user iot with password <span class="st">&#39;yourpass&#39;</span> createdb superuser<span class="kw">;</span></span>
<span id="cb11-7"><a href="#cb11-7"></a>\<span class="fu">du</span> -- list users</span>
<span id="cb11-8"><a href="#cb11-8"></a>\<span class="ex">q</span></span>
<span id="cb11-9"><a href="#cb11-9"></a><span class="bu">exit</span></span></code></pre></div>
<section id="postgresql-hacks" class="level2">
<h2>postgresql hacks</h2>
<div class="sourceCode" id="cb12"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb12-1"><a href="#cb12-1"></a><span class="op">&gt;</span> <span class="ex">SELECT</span> pg_terminate_backend(pg_stat_activity.pid) <span class="ex">FROM</span> pg_stat_activity</span>
<span id="cb12-2"><a href="#cb12-2"></a>  <span class="ex">WHERE</span> pg_stat_activity.datname = <span class="st">&#39;iothub_production;</span></span></code></pre></div>
</section>
</section>
<section id="redis" class="level1">
<h1>Redis</h1>
<div class="sourceCode" id="cb13"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb13-1"><a href="#cb13-1"></a><span class="ex">---------Install</span> build and test dependencies: ------</span>
<span id="cb13-2"><a href="#cb13-2"></a><span class="fu">sudo</span> apt -y update</span>
<span id="cb13-3"><a href="#cb13-3"></a><span class="fu">sudo</span> apt -y full-upgrade</span>
<span id="cb13-4"><a href="#cb13-4"></a><span class="co"># make test required tcl to run</span></span>
<span id="cb13-5"><a href="#cb13-5"></a><span class="fu">sudo</span> apt-get -y install build-essential tcl</span>
<span id="cb13-6"><a href="#cb13-6"></a></span>
<span id="cb13-7"><a href="#cb13-7"></a><span class="ex">---------Set</span> up redis: -------</span>
<span id="cb13-8"><a href="#cb13-8"></a><span class="co">#Download latest copy via this link or with this</span></span>
<span id="cb13-9"><a href="#cb13-9"></a><span class="fu">mkdir</span> Downloads</span>
<span id="cb13-10"><a href="#cb13-10"></a><span class="bu">cd</span> Downloads</span>
<span id="cb13-11"><a href="#cb13-11"></a><span class="ex">curl</span> -O http://download.redis.io/redis-stable.tar.gz</span>
<span id="cb13-12"><a href="#cb13-12"></a><span class="fu">tar</span> xzvf redis-stable.tar.gz</span>
<span id="cb13-13"><a href="#cb13-13"></a></span>
<span id="cb13-14"><a href="#cb13-14"></a><span class="bu">cd</span> redis-stable</span>
<span id="cb13-15"><a href="#cb13-15"></a><span class="fu">make</span></span>
<span id="cb13-16"><a href="#cb13-16"></a><span class="fu">sudo</span> make install</span>
<span id="cb13-17"><a href="#cb13-17"></a><span class="fu">make</span> test</span>
<span id="cb13-18"><a href="#cb13-18"></a></span>
<span id="cb13-19"><a href="#cb13-19"></a><span class="ex">------</span> Configure redis: -------</span>
<span id="cb13-20"><a href="#cb13-20"></a><span class="co">#Create configuration directory:</span></span>
<span id="cb13-21"><a href="#cb13-21"></a><span class="fu">sudo</span> mkdir /etc/redis</span>
<span id="cb13-22"><a href="#cb13-22"></a><span class="co"># Move sample redis configuration file:</span></span>
<span id="cb13-23"><a href="#cb13-23"></a><span class="fu">sudo</span> cp ~/Downloads/redis-stable/redis.conf /etc/redis</span>
<span id="cb13-24"><a href="#cb13-24"></a><span class="fu">sudo</span> vi /etc/redis/redis.conf</span>
<span id="cb13-25"><a href="#cb13-25"></a><span class="co">#set dir for persistent data dump, for log</span></span>
<span id="cb13-26"><a href="#cb13-26"></a><span class="ex">supervised</span> systemd</span>
<span id="cb13-27"><a href="#cb13-27"></a><span class="fu">dir</span> /var/redis</span>
<span id="cb13-28"><a href="#cb13-28"></a><span class="ex">logfile</span> /var/redis/redis.log</span>
<span id="cb13-29"><a href="#cb13-29"></a></span>
<span id="cb13-30"><a href="#cb13-30"></a><span class="ex">------</span> Set up the systemd unit file:------</span>
<span id="cb13-31"><a href="#cb13-31"></a><span class="co">#create file</span></span>
<span id="cb13-32"><a href="#cb13-32"></a><span class="fu">sudo</span> vi /etc/systemd/system/redis.service</span>
<span id="cb13-33"><a href="#cb13-33"></a></span>
<span id="cb13-34"><a href="#cb13-34"></a><span class="co"># add to file</span></span>
<span id="cb13-35"><a href="#cb13-35"></a>[<span class="ex">Unit</span>]</span>
<span id="cb13-36"><a href="#cb13-36"></a><span class="va">Description=</span>Redis <span class="ex">In-Memory</span> Data Store</span>
<span id="cb13-37"><a href="#cb13-37"></a><span class="va">After=</span>network.target</span>
<span id="cb13-38"><a href="#cb13-38"></a></span>
<span id="cb13-39"><a href="#cb13-39"></a>[<span class="ex">Service</span>]</span>
<span id="cb13-40"><a href="#cb13-40"></a><span class="va">User=</span>redis</span>
<span id="cb13-41"><a href="#cb13-41"></a><span class="va">Group=</span>redis</span>
<span id="cb13-42"><a href="#cb13-42"></a><span class="va">ExecStart=</span>/usr/local/bin/redis-server <span class="ex">/etc/redis/redis.conf</span></span>
<span id="cb13-43"><a href="#cb13-43"></a><span class="va">ExecStop=</span>/usr/local/bin/redis-cli <span class="ex">shutdown</span></span>
<span id="cb13-44"><a href="#cb13-44"></a><span class="va">Restart=</span>always</span>
<span id="cb13-45"><a href="#cb13-45"></a></span>
<span id="cb13-46"><a href="#cb13-46"></a>[<span class="ex">Install</span>]</span>
<span id="cb13-47"><a href="#cb13-47"></a><span class="va">WantedBy=</span>multi-user.target</span>
<span id="cb13-48"><a href="#cb13-48"></a></span>
<span id="cb13-49"><a href="#cb13-49"></a><span class="ex">-----</span>––––-----–– Set up redis user, groups and directories: –––</span>
<span id="cb13-50"><a href="#cb13-50"></a><span class="co"># if /etc/systemd/system/redis.service cahnged</span></span>
<span id="cb13-51"><a href="#cb13-51"></a><span class="fu">sudo</span> systemctl daemon-reload</span>
<span id="cb13-52"><a href="#cb13-52"></a><span class="co"># create redis user and group with same ID but no home directory:</span></span>
<span id="cb13-53"><a href="#cb13-53"></a></span>
<span id="cb13-54"><a href="#cb13-54"></a><span class="fu">sudo</span> adduser --system --group --no-create-home redis</span>
<span id="cb13-55"><a href="#cb13-55"></a><span class="fu">sudo</span> mkdir /var/redis   <span class="co"># create directory</span></span>
<span id="cb13-56"><a href="#cb13-56"></a><span class="fu">sudo</span> chown redis:redis /var/redis   <span class="co"># make redis own /var/redis</span></span>
<span id="cb13-57"><a href="#cb13-57"></a><span class="fu">sudo</span> chmod 770 /var/redis   <span class="co"># adjust permission</span></span>
<span id="cb13-58"><a href="#cb13-58"></a></span>
<span id="cb13-59"><a href="#cb13-59"></a><span class="fu">sudo</span> systemctl enable redis <span class="co"># Enable redis to start at boot:</span></span>
<span id="cb13-60"><a href="#cb13-60"></a><span class="fu">sudo</span> systemctl start redis</span>
<span id="cb13-61"><a href="#cb13-61"></a></span>
<span id="cb13-62"><a href="#cb13-62"></a><span class="co">#other commands</span></span>
<span id="cb13-63"><a href="#cb13-63"></a><span class="ex">systemctl</span> status redis</span>
<span id="cb13-64"><a href="#cb13-64"></a><span class="fu">sudo</span> systemctl restart redis</span>
<span id="cb13-65"><a href="#cb13-65"></a></span>
<span id="cb13-66"><a href="#cb13-66"></a><span class="ex">-------</span> Enable redis to start at boot:------</span>
<span id="cb13-67"><a href="#cb13-67"></a><span class="fu">sudo</span> systemctl enable redis</span>
<span id="cb13-68"><a href="#cb13-68"></a></span>
<span id="cb13-69"><a href="#cb13-69"></a><span class="ex">-----------------</span> Test instance: ------------</span>
<span id="cb13-70"><a href="#cb13-70"></a><span class="ex">redis-cli</span></span>
<span id="cb13-71"><a href="#cb13-71"></a><span class="fu">ping</span></span>
<span id="cb13-72"><a href="#cb13-72"></a><span class="kw">set</span> <span class="bu">test</span> <span class="st">&quot;It&#39;s working!&quot;</span></span>
<span id="cb13-73"><a href="#cb13-73"></a><span class="ex">get</span> test</span>
<span id="cb13-74"><a href="#cb13-74"></a><span class="bu">exit</span></span>
<span id="cb13-75"><a href="#cb13-75"></a><span class="fu">sudo</span> systemctl restart redis</span>
<span id="cb13-76"><a href="#cb13-76"></a><span class="ex">--</span>–– FIX Warnings ––-</span>
<span id="cb13-77"><a href="#cb13-77"></a></span>
<span id="cb13-78"><a href="#cb13-78"></a><span class="ex">---</span> WARNING overcommit_memory is set to 0</span>
<span id="cb13-79"><a href="#cb13-79"></a><span class="ex">--</span> fix warning</span>
<span id="cb13-80"><a href="#cb13-80"></a><span class="fu">sudo</span> vi /etc/sysctl.conf</span>
<span id="cb13-81"><a href="#cb13-81"></a><span class="ex">vm.overcommit_memory</span>=1</span>
<span id="cb13-82"><a href="#cb13-82"></a></span>
<span id="cb13-83"><a href="#cb13-83"></a><span class="co"># run on trminal as well</span></span>
<span id="cb13-84"><a href="#cb13-84"></a><span class="fu">sudo</span> sysctl vm.overcommit_memory=1</span>
<span id="cb13-85"><a href="#cb13-85"></a></span>
<span id="cb13-86"><a href="#cb13-86"></a><span class="ex">---</span> The TCP backlog setting of 511 cannot be enforced because</span>
<span id="cb13-87"><a href="#cb13-87"></a><span class="ex">----</span> /proc/sys/net/core/somaxconn is set to the lower value of 128</span>
<span id="cb13-88"><a href="#cb13-88"></a></span>
<span id="cb13-89"><a href="#cb13-89"></a><span class="fu">sudo</span> vi /etc/rc.local</span>
<span id="cb13-90"><a href="#cb13-90"></a><span class="ex">sysctl</span> -w net.core.somaxconn=65535</span>
<span id="cb13-91"><a href="#cb13-91"></a></span>
<span id="cb13-92"><a href="#cb13-92"></a><span class="co"># run on trminal as well</span></span>
<span id="cb13-93"><a href="#cb13-93"></a><span class="fu">sudo</span> sysctl -w net.core.somaxconn=65535</span></code></pre></div>
</section>
<section id="mina" class="level1">
<h1>Mina</h1>
<section id="install-mina-gem" class="level2">
<h2>install mina gem</h2>
<div class="sourceCode" id="cb14"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb14-1"><a href="#cb14-1"></a><span class="ex">gem</span> instal mina</span></code></pre></div>
</section>
</section>
<section id="some-commands-with-no-password" class="level1">
<h1>some commands with no password</h1>
<div class="sourceCode" id="cb15"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb15-1"><a href="#cb15-1"></a><span class="fu">sudo</span> vi /etc/sudoers</span>
<span id="cb15-2"><a href="#cb15-2"></a><span class="co"># shift+G</span></span>
<span id="cb15-3"><a href="#cb15-3"></a>ՈՒշադրություն, գրել վերջում</span>
<span id="cb15-4"><a href="#cb15-4"></a><span class="co"># IMPORTANT!!!  add at the end</span></span>
<span id="cb15-5"><a href="#cb15-5"></a><span class="ex">deployer</span> ALL=(ALL) <span class="ex">NOPASSWD</span>: /bin/ln</span>
<span id="cb15-6"><a href="#cb15-6"></a><span class="ex">deployer</span> ALL=(ALL) <span class="ex">NOPASSWD</span>: /bin/chmod</span>
<span id="cb15-7"><a href="#cb15-7"></a><span class="ex">deployer</span> ALL=(ALL) <span class="ex">NOPASSWD</span>: /bin/cp</span>
<span id="cb15-8"><a href="#cb15-8"></a></span>
<span id="cb15-9"><a href="#cb15-9"></a><span class="co"># :wq!</span></span>
<span id="cb15-10"><a href="#cb15-10"></a><span class="co"># https://github.com/mina-deploy/mina/issues/234#issuecomment-57242061</span></span>
<span id="cb15-11"><a href="#cb15-11"></a><span class="fu">sudo</span> service ssh reload</span></code></pre></div>
<section id="deploy-with-mina" class="level2">
<h2>deploy with mina</h2>
<div class="sourceCode" id="cb16"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb16-1"><a href="#cb16-1"></a><span class="op">&gt;</span> <span class="ex">mina</span> test setup</span>
<span id="cb16-2"><a href="#cb16-2"></a><span class="co"># at frist time uncomment schema_load, then comment</span></span>
<span id="cb16-3"><a href="#cb16-3"></a><span class="op">&gt;</span> <span class="ex">mina</span> test deploy</span></code></pre></div>
</section>
</section>
<section id="backup-gem" class="level1">
<h1>Backup gem</h1>
<div class="sourceCode" id="cb17"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb17-1"><a href="#cb17-1"></a><span class="ex">gem</span> install backup -v5.0.0.beta.2</span></code></pre></div>
</section>
<section id="cron" class="level1">
<h1>CRON</h1>
<section id="activate-log-for-cron-jobs" class="level2">
<h2>activate log for cron jobs</h2>
<div class="sourceCode" id="cb18"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb18-1"><a href="#cb18-1"></a><span class="fu">sudo</span> vi  /etc/rsyslog.d/50-default.conf</span>
<span id="cb18-2"><a href="#cb18-2"></a><span class="ex">/s</span> <span class="co">#cron</span></span>
<span id="cb18-3"><a href="#cb18-3"></a><span class="co"># uncomment the line</span></span>
<span id="cb18-4"><a href="#cb18-4"></a><span class="ex">cron.*</span>                          /var/log/cron.log</span>
<span id="cb18-5"><a href="#cb18-5"></a></span>
<span id="cb18-6"><a href="#cb18-6"></a><span class="fu">sudo</span> service rsyslog restart</span>
<span id="cb18-7"><a href="#cb18-7"></a><span class="fu">sudo</span> service cron restart</span>
<span id="cb18-8"><a href="#cb18-8"></a><span class="co"># Cron activity will now be logged to /var/log/cron.log file (in addition to syslog).</span></span>
<span id="cb18-9"><a href="#cb18-9"></a></span>
<span id="cb18-10"><a href="#cb18-10"></a><span class="co"># to continuously monitor it</span></span>
<span id="cb18-11"><a href="#cb18-11"></a><span class="fu">tail</span> -f /var/log/syslog <span class="kw">|</span> <span class="fu">grep</span> CRON</span>
<span id="cb18-12"><a href="#cb18-12"></a></span></code></pre></div>
</section>
</section>
<section id="convert-putty-to-ssh-agent" class="level1">
<h1>Convert putty to ssh-agent</h1>
<div class="sourceCode" id="cb19"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb19-1"><a href="#cb19-1"></a><span class="co"># puttygen supports exporting your private key to an OpenSSH compatible format. You can then use OpenSSH tools to recreate the public key.</span></span>
<span id="cb19-2"><a href="#cb19-2"></a></span>
<span id="cb19-3"><a href="#cb19-3"></a><span class="co"># 1. Open PuttyGen</span></span>
<span id="cb19-4"><a href="#cb19-4"></a><span class="co"># 2. Click Load</span></span>
<span id="cb19-5"><a href="#cb19-5"></a><span class="co"># 3. Load your private key</span></span>
<span id="cb19-6"><a href="#cb19-6"></a><span class="co"># 4. Go to Conversions-&gt;Export OpenSSH and export your private key</span></span>
<span id="cb19-7"><a href="#cb19-7"></a><span class="co"># 5. Copy your private key to ~/.ssh/id_dsa (or id_rsa).</span></span>
<span id="cb19-8"><a href="#cb19-8"></a><span class="co"># 6. Create the RFC 4716 version of the public key using ssh-keygen</span></span>
<span id="cb19-9"><a href="#cb19-9"></a><span class="fu">ssh-keygen</span> -e -f ~/.ssh/id_dsa <span class="op">&gt;</span> ~/.ssh/id_dsa_com.pub</span>
<span id="cb19-10"><a href="#cb19-10"></a><span class="co"># 7. Convert the RFC 4716 version of the public key to the OpenSSH format:</span></span>
<span id="cb19-11"><a href="#cb19-11"></a><span class="fu">ssh-keygen</span> -i -f ~/.ssh/id_dsa_com.pub <span class="op">&gt;</span> ~/.ssh/id_dsa.pub</span></code></pre></div>
</section>
<section id="linux-commands" class="level1">
<h1>Linux commands</h1>
<section id="folder-size" class="level2">
<h2>folder size</h2>
<div class="sourceCode" id="cb20"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb20-1"><a href="#cb20-1"></a><span class="co"># disk usage info</span></span>
<span id="cb20-2"><a href="#cb20-2"></a><span class="fu">df</span> -h --total</span>
<span id="cb20-3"><a href="#cb20-3"></a></span>
<span id="cb20-4"><a href="#cb20-4"></a><span class="co"># each folder size</span></span>
<span id="cb20-5"><a href="#cb20-5"></a><span class="fu">du</span> -sh * <span class="kw">|</span> <span class="fu">sort</span> -g</span>
<span id="cb20-6"><a href="#cb20-6"></a><span class="fu">du</span> -sk * <span class="kw">|</span> <span class="fu">sort</span> -n</span>
<span id="cb20-7"><a href="#cb20-7"></a></span>
<span id="cb20-8"><a href="#cb20-8"></a><span class="co"># each folder size including hiddens</span></span>
<span id="cb20-9"><a href="#cb20-9"></a><span class="fu">du</span> -sch .[!.]* * <span class="kw">|</span><span class="fu">sort</span> -h</span>
<span id="cb20-10"><a href="#cb20-10"></a><span class="co"># try ncdu</span></span>
<span id="cb20-11"><a href="#cb20-11"></a><span class="fu">sudo</span> apt-get install ncdu</span>
<span id="cb20-12"><a href="#cb20-12"></a><span class="ex">ncdu</span></span></code></pre></div>
</section>
<section id="system.d" class="level2">
<h2>system.d</h2>
<div class="sourceCode" id="cb21"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb21-1"><a href="#cb21-1"></a><span class="co"># nginx config test</span></span>
<span id="cb21-2"><a href="#cb21-2"></a><span class="fu">sudo</span> nginx -t</span>
<span id="cb21-3"><a href="#cb21-3"></a><span class="fu">sudo</span> nginx -t -c /etc/nginx/conf.d/taxicenter.conf</span>
<span id="cb21-4"><a href="#cb21-4"></a></span>
<span id="cb21-5"><a href="#cb21-5"></a><span class="co"># systemd</span></span>
<span id="cb21-6"><a href="#cb21-6"></a><span class="co"># reload if unit file changed</span></span>
<span id="cb21-7"><a href="#cb21-7"></a><span class="fu">sudo</span> systemctl daemon-reload</span></code></pre></div>
</section>
<section id="logs" class="level2">
<h2>logs</h2>
<div class="sourceCode" id="cb22"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb22-1"><a href="#cb22-1"></a><span class="co"># read</span></span>
<span id="cb22-2"><a href="#cb22-2"></a><span class="fu">cat</span> /node-1.log <span class="kw">|</span> <span class="fu">head</span> -20</span>
<span id="cb22-3"><a href="#cb22-3"></a><span class="fu">tail</span> -f logs/node-1.log</span>
<span id="cb22-4"><a href="#cb22-4"></a><span class="ex">jq</span> select(.ns[1]==<span class="st">&quot;consensus&quot;</span>)</span>
<span id="cb22-5"><a href="#cb22-5"></a><span class="ex">jq</span> -c . <span class="kw">|</span> <span class="kw">{</span> <span class="st">&quot;at&quot;</span>: <span class="ex">.at</span>, <span class="st">&quot;val&quot;</span>: .data.H <span class="kw">}</span></span></code></pre></div>
</section>
<section id="bash" class="level2">
<h2>bash</h2>
<div class="sourceCode" id="cb23"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb23-1"><a href="#cb23-1"></a><span class="fu">find</span> -name all.js</span>
<span id="cb23-2"><a href="#cb23-2"></a><span class="kw">for</span> <span class="ex">j</span> in <span class="va">$(</span><span class="fu">find</span> -name all.js<span class="va">)</span><span class="kw">;</span> <span class="kw">do</span> <span class="fu">cp</span> -v /tmp/all.js <span class="va">$j</span><span class="kw">;</span> <span class="kw">done</span></span></code></pre></div>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on March 24, 2018
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/DevOps.html">DevOps</a></li><li><a href="/tags/deployment.html">deployment</a></li><li><a href="/tags/linux-setup.html">linux-setup</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Sat, 24 Mar 2018 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/programming/deployment.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>
<item>
    <title>The Algebra of Algebraic Data Types</title>
    <link>http://imast.am/mitq/haskell/algebraic-data-types.html</link>
    <description><![CDATA[<div class="post-content">
<div id="TOC"><ul>
<li><a href="#algebra">Algebra</a><ul>
<li><a href="#haskell-types-are-algebra">Haskell types are Algebra</a></li>
</ul></li>
<li><a href="#type-calculus">Type Calculus</a><ul>
<li><a href="#deriviative-of-list-recursive-type">Deriviative of List recursive type</a></li>
</ul></li>
</ul></div>
<p><a href="https://www.youtube.com/watch?v=YScIPA8RbVE">video</a> <a href="https://stackoverflow.com/questions/9190352/abusing-the-algebra-of-algebraic-data-types-why-does-this-work">Abusing the algebra of algebraic data types - why does this work?</a></p>
<p>initial algebra in category thoery</p>
<section id="algebra" class="level1">
<h1>Algebra</h1>
<ul>
<li>Symbols: Things</li>
<li>Operations: Ways to make new things</li>
<li>Laws: Rules the things follow</li>
</ul>
<section id="haskell-types-are-algebra" class="level2">
<h2>Haskell types are Algebra</h2>
<ul>
<li>Symbols - Types ((), Int, Bool)</li>
<li>Operations - Type Constructors (Maybe, Either, [])</li>
<li>Laws - ?</li>
</ul>
</section>
</section>
<section id="type-calculus" class="level1">
<h1>Type Calculus</h1>
<p>δ1 = 0 δx = 1 δ(f+g) = δf + δg δ(f*g) = δf * g + f * δg δ(f(g)) = δf(g) * δg</p>
<section id="deriviative-of-list-recursive-type" class="level2">
<h2>Deriviative of List recursive type</h2>
<p>L(x) = 1 / (1 - x) δL(x) = 1 / (1 - x)<sup>2</sup></p>
</section>
</section>
</div>

<div class="row">
        <span class="date  text-right">
            <i class="fa fa-calenda"></i> Posted on June  9, 2016
        </span>
        <span class="tags text-right" style="width: 100%">
            <ul class="list-inline"><li><i class="fa fa-tags"></i></li><li><a href="/tags/haskell.html">haskell</a></li><li><a href="/tags/adt.html">adt</a></li></ul>
        </span>
</div>
]]></description>
    <pubDate>Thu, 09 Jun 2016 00:00:00 UT</pubDate>
    <guid>http://imast.am/mitq/haskell/algebraic-data-types.html</guid>
    <dc:creator>Arthur Vardanyan</dc:creator>
</item>

    </channel>
</rss>
